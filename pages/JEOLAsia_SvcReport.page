<!--
 * Created : 2019/03/31 by GW Tsutsui
 -->
<apex:page showHeader="false" standardStylesheets="true" applyHtmlTag="false" applyBodyTag="false" doctype="html-5.0" standardController="SVC_Report__c"
  extensions="JEOLAsia_SvcReportCtrl">
  <apex:outputPanel layout="none" id="contentPage">
    <html>

    <head>
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <!-- <title>{!qdm.parentRec.ShipmentName__c} ({!qdm.parentRec.ShipmentCountry__c})</title> -->
      <apex:stylesheet value="{!URLFOR($Resource.JQueryUI, 'JQueryUI/jquery-ui.min.css')}" />
      <apex:stylesheet value="{!URLFOR($Resource.JEOL_CustomizedMaterials, 'JEOL_CustomizedMaterials/bootstrap/css/bootstrap.css')}"
      />
      <apex:stylesheet value="{!URLFOR($Resource.JEOL_CustomizedMaterials, 'JEOL_CustomizedMaterials/JEOL_CustomBaseStyle.css')}"
      />
      <apex:stylesheet value="{!URLFOR($Resource.JEOL_CustomizedMaterials, 'JEOL_CustomizedMaterials/JEOL_AsiaStyle.css')}" />
      <apex:includeScript value="{!URLFOR($Resource.JQuery)}" />
      <apex:includeScript value="{!URLFOR($Resource.JQueryUI, 'JQueryUI/jquery-ui.min.js')}" />
      <apex:includeScript value="{!URLFOR($Resource.JEOL_CustomizedMaterials, 'JEOL_CustomizedMaterials/bootstrap/js/bootstrap.min.js')}"
      />
      <apex:includeScript value="{!URLFOR($Resource.JEOL_CustomizedMaterials, 'JEOL_CustomizedMaterials/PagerHelper.js')}" />
      <!-- JavaScriptソースが肥大化したため、以下の別VFページに切り出し -->
      <!-- <apex:include pageName="JeolAsia_JS" /> -->

      <script language="javascript">
        var $j = jQuery.noConflict();
        var safety = true;
        var makeSafetyCheck = true;
        var makeSafetyCheck2 = true;
        var isMouseDown = false;
        var isRemoveMode = true;


        $j(document).on('mouseenter', '.mightOverflow', function () {
          var $this = $j(this);

          if (this.offsetWidth < this.scrollWidth && !$this.attr('title')) {
            $this.attr('title', $this.text());
          }
        });

        $j(document).on('mouseenter', '.showTooltipEnglishText', function () {
          var $this = $j(this);
          $j('.EibunText').val($this.attr('title'));
        });

        function alertTest() {
          alert(' !!!alert Test!!!! ');
        }

        $j(function () {
          var windwTransitions = (function (e) {
            if (makeSafetyCheck2 && (makeSafetyCheck || document.activeElement.type === 'text')) {
              var currentFocus = document.querySelector(':focus');
              if (currentFocus && typeof currentFocus !== 'undefined') {
                currentFocus.blur();
              }
              if (safety) {
                e.returnValue = '内容に変更がありました。保存せずにページから離れますか？';
              } else {
                safety = true;
              }
            }
          });
          if (window.addEventListener) {
            window.addEventListener('beforeunload', windwTransitions);
          } else if (window.attachEvent) {
            window.attachEvent('onbeforeunload', windwTransitions);
          } else {
            alert("画面遷移時に警告を出せません。ご注意ください。");
          }
          var $window = $j(window);
          $window.on('click', clearAction);
          $window.on('scroll', function (e) {
            var beforeTop = window.beforeTop;
            var currentTop = $window.scrollTop();
            if (!beforeTop) {
              beforeTop = 0;
            }
            if (beforeTop < currentTop && currentTop > 48) {
              $j('.navi-area').addClass('fixed-top');
            } else if ((beforeTop > currentTop && currentTop <= 48) || currentTop == 0) {
              $j('.navi-area').removeClass('fixed-top');
            }
            window.beforeTop = currentTop;
          });
          $window.on('keydown', function (e) {
            var $dropdown = $j('.open[data-type="dropdown"]');
            if (/(38|40|27)/.test(e.which) && $dropdown.length) {
              e.preventDefault();
              e.stopPropagation();

              if (e.which == 27) {
                $dropdown.removeClass('open');
                $dropdown.find('[data-type="button"]').trigger('focus');
              }

              var $items = $dropdown.find('[data-type="list"] [data-type="item"]');
              var $target = $j(e.target);
              if ($target.attr('data-type') !== 'item') {
                $target = $target.closest('[data-type="item"]');
              }

              var target = null;
              if ($target.length) {
                target = $target[0];
              }
              var index = 0;
              if (target) {
                index = $items.index(target);
                if (e.which == 38 && index > 0) {
                  index--;
                }
                if (e.which == 40 && index < $items.length - 1) {
                  index++;
                }
              }
              $items.eq(index).find('a,input').trigger('focus');
            }
          });
          contentInit();
        });

        function getCurrentJProdCostCurrency() {

          var salesPriceUnitValue = $j('.currencyCostIsoCode').val();
          if (!salesPriceUnitValue) {
            salesPriceUnitValue = $j("[id$='currencyCostIsoCodeView']").text();
          }

          return salesPriceUnitValue;
        }

        function getCurrentSalesCurrency() {

          var salesPriceUnitValue = $j('.currencySalesIsoCode').val();
          if (!salesPriceUnitValue) {
            salesPriceUnitValue = $j("[id$='currencySalesIsoCodeView']").text();
          }

          return salesPriceUnitValue;
        }


        function unlockSafety() {
          safety = false;
        }
        function lockSafety() {
          safety = true;
        }
        function contentInit() {
          initWithCalcurate();
          $j('#selected-list-A').droppable(droppableOption);
          $j('#selected-list-B').droppable(droppableOption);
          $j('#selected-list-G1').droppable(droppableOption);
          $j('#selected-list-G2').droppable(droppableOption);
          $j('#selected-list-catalog-A').droppable(droppableOption_catalogA);
          $j('#selected-list-catalog-G').droppable(droppableOption_catalogG);
          //$j('.content-panel').draggable({handle: ".content-header"});
          //$j('.subwindow').draggable({handle: '.content-header'});
          $j('#detailProductItemView').on('hidden.bs.modal', function () {
            $j('#detailProductItemView .selected-list .drop-target').empty();
            detailProductAItemManage.setTargetNode(null);
            detailProductBItemManage.setTargetNode(null);
            detailProductG1ItemManage.setTargetNode(null);
            detailProductG2ItemManage.setTargetNode(null);
            detailProductACatalogManage.setTargetNode(null);
            detailProductGCatalogManage.setTargetNode(null);
          });
        }
        function dorpdownAction(target) {
          var $target = $j(target).closest('[data-type="dropdown"]');
          if ($target.hasClass('open')) {
            $target.removeClass('open');
          } else {
            $j('.open').removeClass('open');
            $target.addClass('open');
          }
        }
        function clearAction(e) {
          var $target = $j(e.target).closest('[data-type="dropdown"]');
          if (!$target.hasClass('open')) {
            var $dropdown = $j('.open[data-type="dropdown"]');
            $dropdown.removeClass('open');
            //$dropdown.find('[data-type="button"]').trigger('focus');
          }
        }

        function setInputField(target) {
          var $target = $j(target);
          var $dropdown = $target.closest('[data-type="dropdown"]');
          var $inputField = $dropdown.find('[data-type="input-field"]');
          if ($target.attr('data-type') !== 'item') {
            $target = $target.closest('[data-type="item"]');
          }
          $inputField.val($target[0].getAttribute('data-value'));
          $inputField.trigger('focus');
          dorpdownAction(target);
        }
        function setSortableA() {
          var sortableArea = $j('.quotation-detail-listA');
          sortableArea.sortable(sortableOptionA);
        }
        function setSortableB() {
          var sortableArea = $j('.quotation-detail-listB');
          sortableArea.sortable(sortableOptionB);
        }
        function setSortableC() {
          var sortableArea = $j('.quotation-detail-listC');
          sortableArea.sortable(sortableOptionC);
        }
        function setSortableD() {
          var sortableArea = $j('.quotation-detail-listD');
          sortableArea.sortable(sortableOptionD);
        }
        function setSortableE() {
          var sortableArea = $j('.quotation-detail-listE');
          sortableArea.sortable(sortableOptionE);
        }
        function setSortableF() {
          var sortableArea = $j('.quotation-detail-listF');
          sortableArea.sortable(sortableOptionF);
        }
        function setSortableG() {
          var sortableArea = $j('.quotation-detail-listG');
          sortableArea.sortable(sortableOptionG);
        }

        function formatRate(target) {
          var rateVal = transformCurrencyToInteger($j(target).val(), 9);
          if (rateVal == 0) rateVal = 1;
          $j(target).val(currencyFormat(rateVal.toFixed(9)));
        }

        function addDepth(target) {
          var targetRow = $j(target).closest('.quotation-detail-item');
          var targetBefore = targetRow.prev('.quotation-detail-item');
          var depth = parseInt(targetRow[0].getAttribute('data-depth'), 10);
          if (targetBefore[0]) {
            var beforeDepth = parseInt(targetBefore[0].getAttribute('data-depth'), 10);
            var resultVal = 1 + depth;
            if (resultVal - beforeDepth > 1) {
              resultVal--;
            }
            if (resultVal > 5) {
              resultVal = 5;
            }
            targetRow[0].setAttribute('data-depth', resultVal);
            targetRow.find('.quotation-detail-depth').val(resultVal);
            initWithCalcurate();
          }
        }

        function removeDepth(target, isChain) {
          var targetRow = $j(target).closest('.quotation-detail-item');
          var targetBefore = targetRow.prev('.quotation-detail-item');
          var depth = parseInt(targetRow[0].getAttribute('data-depth'), 10);
          var resultVal = 0;
          if (targetBefore[0]) {
            var beforeDepth = parseInt(targetBefore[0].getAttribute('data-depth'), 10);
            var resultVal = 0 + depth - 1;
            if (resultVal < 0) {
              resultVal = 0;
            }
            targetRow[0].setAttribute('data-depth', resultVal);
            targetRow.find('.quotation-detail-depth').val(resultVal);
          }
          var targetAfter = targetRow.next('.quotation-detail-item');
          if (targetAfter[0]) {
            var nextNodeDepth = parseInt(targetAfter[0].getAttribute('data-depth'), 10);
            var conpareNum = (isChain ? 0 : 1);
            if (nextNodeDepth - resultVal > conpareNum) {
              removeDepth(targetAfter[0], true);
            }
          }
          initWithCalcurate();

        }
        function eraseDepth(target) {
          var targetRow = $j(target).closest('.quotation-detail-item');
          var depth = parseInt(targetRow[0].getAttribute('data-depth'), 10);
          for (var i = depth; i >= 0; i--) {
            removeDepth(target);
          }
        }

        function initWithCalcurate() {
          RowManageA.create();
          RowManageB.create();
          RowManageC.create();
          RowManageD.create();
          RowManageE.create();
          RowManageF.create();
          RowManageG.create();
          calcurate();
        }

        function calcurate() {
          myDivObj = document.getElementById("isReadOnly");
          if (!myDivObj || myDivObj.innerHTML != "1") {

            RowManageA.calcurate();
            RowManageB.calcurate();
            RowManageC.calcurate();
            RowManageD.calcurate();
            RowManageE.calcurate();
            RowManageF.calcurate();
            RowManageG.calcurate();

          }
        }

        // Fuction changing the discount type from Rate to Value and vice versa
        function discountChangeRateValueType() {
          var discountType = $j('.discountType').val();
          if (discountType === 'Rate') {
            $j('.discountType').val('Value');
          } else {
            $j('.discountType').val('Rate');
          }
        }

        var ItemWrap = function (target, parent) {
          this.target = target;
          this.$target = $j(target);
          if (target) {
            this.type = target.getAttribute('data-type');
          }
          this.parent = parent;
          var layerNum = 0;
          if (parent) {
            layerNum = parent.layer + 1;
          }
          this.layer = layerNum;
          this.children = new Array();
        };
        ItemWrap.prototype = {
          calc: function () {

          }
        }
        var RowManageA = function () { };
        RowManageA.prototype = {
          init: function () {
            this.root = new ItemWrap();
            this.list = new Array();
          },
          push: function (row) {
            var rootItem = this.root;
            var lastChildItem = rootItem;

            while (lastChildItem.children.length > 0) {
              var length = lastChildItem.children.length;
              lastChildItem = lastChildItem.children[length - 1];
            }
            var currentTarget = lastChildItem;
            if (currentTarget.target) {
              var targetDepth = parseInt(row.getAttribute('data-depth'), 10);
              var currentTargetDepth = parseInt(currentTarget.target.getAttribute('data-depth'), 10);

              if (targetDepth == currentTargetDepth) {
                currentTarget = currentTarget.parent;
              } else if (targetDepth < currentTargetDepth) {
                while (currentTarget.target) {
                  currentTargetDepth = parseInt(currentTarget.target.getAttribute('data-depth'), 10);
                  if (targetDepth == currentTargetDepth) {
                    currentTarget = currentTarget.parent;
                    break;
                  }
                  currentTarget = currentTarget.parent;
                }
              }
            }
            var item = new ItemWrap(row, currentTarget);
            currentTarget.children.push(item);
            this.list.push(item);
          },
          create: function () {
            var details = $j('.quotation-detail-itemA');
            this.init();
            for (var i = 0; i < details.length; i++) {
              this.push(details[i]);
            }
          },

          calcurate: function () {
          }
        }
        RowManageA = new RowManageA();




        var RowManageB = function () { };
        RowManageB.prototype = {
          init: function () {
            this.root = new ItemWrap();
            this.list = new Array();
          },
          push: function (row) {
            var rootItem = this.root;
            var lastChildItem = rootItem;

            while (lastChildItem.children.length > 0) {
              var length = lastChildItem.children.length;
              lastChildItem = lastChildItem.children[length - 1];
            }
            var currentTarget = lastChildItem;
            if (currentTarget.target) {
              var targetDepth = parseInt(row.getAttribute('data-depth'), 10);
              var currentTargetDepth = parseInt(currentTarget.target.getAttribute('data-depth'), 10);

              if (targetDepth == currentTargetDepth) {
                currentTarget = currentTarget.parent;
              } else if (targetDepth < currentTargetDepth) {
                while (currentTarget.target) {
                  currentTargetDepth = parseInt(currentTarget.target.getAttribute('data-depth'), 10);
                  if (targetDepth == currentTargetDepth) {
                    currentTarget = currentTarget.parent;
                    break;
                  }
                  currentTarget = currentTarget.parent;
                }
              }
            }
            var item = new ItemWrap(row, currentTarget);
            currentTarget.children.push(item);
            this.list.push(item);
          },
          create: function () {
            var details = $j('.quotation-detail-itemB');
            this.init();
            for (var i = 0; i < details.length; i++) {
              this.push(details[i]);
            }
          },

          calcurate: function () {
          }

        }
        RowManageB = new RowManageB();



        var RowManageC = function () { };
        RowManageC.prototype = {
          init: function () {
            this.root = new ItemWrap();
            this.list = new Array();
            this.subTotalC = 0;
            this.subTotalSalesC = 0;
          },
          push: function (row) {
            var rootItem = this.root;
            var lastChildItem = rootItem;

            while (lastChildItem.children.length > 0) {
              var length = lastChildItem.children.length;
              lastChildItem = lastChildItem.children[length - 1];
            }
            var currentTarget = lastChildItem;
            if (currentTarget.target) {
              var targetDepth = parseInt(row.getAttribute('data-depth'), 10);
              var currentTargetDepth = parseInt(currentTarget.target.getAttribute('data-depth'), 10);

              if (targetDepth == currentTargetDepth) {
                currentTarget = currentTarget.parent;
              } else if (targetDepth < currentTargetDepth) {
                while (currentTarget.target) {
                  currentTargetDepth = parseInt(currentTarget.target.getAttribute('data-depth'), 10);
                  if (targetDepth == currentTargetDepth) {
                    currentTarget = currentTarget.parent;
                    break;
                  }
                  currentTarget = currentTarget.parent;
                }
              }
            }
            var item = new ItemWrap(row, currentTarget);
            currentTarget.children.push(item);
            this.list.push(item);
          },

          create: function () {
            var details = $j('.quotation-detail-itemC');
            this.init();
            for (var i = 0; i < details.length; i++) {
              this.push(details[i]);
            }
          },

          calcurate: function () {
          }

        }
        RowManageC = new RowManageC();


        var RowManageD = function () { };
        RowManageD.prototype = {
          init: function () {
            this.root = new ItemWrap();
            this.list = new Array();
            this.subTotalD = 0;
            this.subTotalSalesD = 0;
          },
          push: function (row) {
            var rootItem = this.root;
            var lastChildItem = rootItem;

            while (lastChildItem.children.length > 0) {
              var length = lastChildItem.children.length;
              lastChildItem = lastChildItem.children[length - 1];
            }
            var currentTarget = lastChildItem;
            if (currentTarget.target) {
              var targetDepth = parseInt(row.getAttribute('data-depth'), 10);
              var currentTargetDepth = parseInt(currentTarget.target.getAttribute('data-depth'), 10);

              if (targetDepth == currentTargetDepth) {
                currentTarget = currentTarget.parent;
              } else if (targetDepth < currentTargetDepth) {
                while (currentTarget.target) {
                  currentTargetDepth = parseInt(currentTarget.target.getAttribute('data-depth'), 10);
                  if (targetDepth == currentTargetDepth) {
                    currentTarget = currentTarget.parent;
                    break;
                  }
                  currentTarget = currentTarget.parent;
                }
              }
            }
            var item = new ItemWrap(row, currentTarget);
            currentTarget.children.push(item);
            this.list.push(item);
          },
          create: function () {
            var details = $j('.quotation-detail-itemD');
            this.init();
            for (var i = 0; i < details.length; i++) {
              this.push(details[i]);
            }
          },

          calcurate: function () {
          }


        }
        RowManageD = new RowManageD();



        var RowManageE = function () { };
        RowManageE.prototype = {
          init: function () {
            this.root = new ItemWrap();
            this.list = new Array();
            this.subTotalE = 0;
            this.subTotalSalesE = 0;
          },
          push: function (row) {
            var rootItem = this.root;
            var lastChildItem = rootItem;

            while (lastChildItem.children.length > 0) {
              var length = lastChildItem.children.length;
              lastChildItem = lastChildItem.children[length - 1];
            }
            var currentTarget = lastChildItem;
            if (currentTarget.target) {
              var targetDepth = parseInt(row.getAttribute('data-depth'), 10);
              var currentTargetDepth = parseInt(currentTarget.target.getAttribute('data-depth'), 10);

              if (targetDepth == currentTargetDepth) {
                currentTarget = currentTarget.parent;
              } else if (targetDepth < currentTargetDepth) {
                while (currentTarget.target) {
                  currentTargetDepth = parseInt(currentTarget.target.getAttribute('data-depth'), 10);
                  if (targetDepth == currentTargetDepth) {
                    currentTarget = currentTarget.parent;
                    break;
                  }
                  currentTarget = currentTarget.parent;
                }
              }
            }
            var item = new ItemWrap(row, currentTarget);
            currentTarget.children.push(item);
            this.list.push(item);
          },
          create: function () {
            var details = $j('.quotation-detail-itemE');
            this.init();
            for (var i = 0; i < details.length; i++) {
              this.push(details[i]);
            }
          },
          calcurate: function () {
          }

        }
        RowManageE = new RowManageE();


        var RowManageF = function () { };
        RowManageF.prototype = {
          init: function () {
            this.root = new ItemWrap();
            this.list = new Array();
            this.subTotalF = 0;
            this.subTotalSalesF = 0;
          },
          push: function (row) {
            var rootItem = this.root;
            var lastChildItem = rootItem;

            while (lastChildItem.children.length > 0) {
              var length = lastChildItem.children.length;
              lastChildItem = lastChildItem.children[length - 1];
            }
            var currentTarget = lastChildItem;
            if (currentTarget.target) {
              var targetDepth = parseInt(row.getAttribute('data-depth'), 10);
              var currentTargetDepth = parseInt(currentTarget.target.getAttribute('data-depth'), 10);

              if (targetDepth == currentTargetDepth) {
                currentTarget = currentTarget.parent;
              } else if (targetDepth < currentTargetDepth) {
                while (currentTarget.target) {
                  currentTargetDepth = parseInt(currentTarget.target.getAttribute('data-depth'), 10);
                  if (targetDepth == currentTargetDepth) {
                    currentTarget = currentTarget.parent;
                    break;
                  }
                  currentTarget = currentTarget.parent;
                }
              }
            }
            var item = new ItemWrap(row, currentTarget);
            currentTarget.children.push(item);
            this.list.push(item);
          },
          create: function () {
            var details = $j('.quotation-detail-itemF');
            this.init();
            for (var i = 0; i < details.length; i++) {
              this.push(details[i]);
            }
          },

          calcurate: function () {
          }

        }
        RowManageF = new RowManageF();



        var RowManageG = function () { };
        RowManageG.prototype = {
          init: function () {
            this.root = new ItemWrap();
            this.list = new Array();
            this.subTotalG = 0;
            this.subTotalSalesG = 0;
          },
          push: function (row) {
            var rootItem = this.root;
            var lastChildItem = rootItem;

            while (lastChildItem.children.length > 0) {
              var length = lastChildItem.children.length;
              lastChildItem = lastChildItem.children[length - 1];
            }
            var currentTarget = lastChildItem;
            if (currentTarget.target) {
              var targetDepth = parseInt(row.getAttribute('data-depth'), 10);
              var currentTargetDepth = parseInt(currentTarget.target.getAttribute('data-depth'), 10);

              if (targetDepth == currentTargetDepth) {
                currentTarget = currentTarget.parent;
              } else if (targetDepth < currentTargetDepth) {
                while (currentTarget.target) {
                  currentTargetDepth = parseInt(currentTarget.target.getAttribute('data-depth'), 10);
                  if (targetDepth == currentTargetDepth) {
                    currentTarget = currentTarget.parent;
                    break;
                  }
                  currentTarget = currentTarget.parent;
                }
              }
            }
            var item = new ItemWrap(row, currentTarget);
            currentTarget.children.push(item);
            this.list.push(item);
          },
          create: function () {
            var details = $j('.quotation-detail-itemG');
            this.init();
            for (var i = 0; i < details.length; i++) {
              this.push(details[i]);
            }
          },
          calcurate: function () {

          }

        }
        RowManageG = new RowManageG();


        function currencyFormat(value) {
          if (!value && value !== 0) {
            value = 0;
          }
          var valueParts = String(value).split(".");
          valueParts[0] = valueParts[0].replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,");
          return valueParts.join('.');
        }
        var transform2ByteNumericBase = '０１２３４５６７８９';
        function transformCurrencyToInteger(value, iNbDigits) {

          value = String(value);
          if ((!value && value !== 0) || !value.match(/^-?(?!,)[0-9０-９,]*(\.?(?=[0-9０-９]+)[0-9０-９]+)$/g)) {
            value = '0';
          } else {
            value = value.replace(/[０-９]/g, function (s) { return transform2ByteNumericBase.indexOf(s); });
          }
          value = parseFloat(value.replace(/,/g, ''));

          value = parseFloat(parseFloat(parseFloat((parseFloat((value * Math.pow(10, iNbDigits)).toFixed(10)).toFixed(0))) / Math.pow(10, iNbDigits)).toFixed(iNbDigits));

          return value;
        }

        function optionSetting(target) {
          var $targetRow = $j(target).closest('.quotation-detail-item');
          var value = $j(target).prop('checked');
          $targetRow[0].setAttribute(target.getAttribute('data-target'), value);
        }






        function optionSettingFromPanelClick(target) {
          var $targetRow = $j(target).closest('.quotation-detail-item');
          var targetClass = target.getAttribute('data-target-class');
          var $targetChackbox = $targetRow.find('.' + targetClass);
          var value = $targetChackbox.prop('checked');
          $targetChackbox.prop('checked', !value);
          optionSetting($targetChackbox[0]);
        }

        var sortableOptionA = {
          axis: 'y',
          opacity: 0.7,
          placeholder: 'drag-placeholder',
          cursor: 'row-resize',
          handle: '.sortableActionA',
          start: function (e, ui) { isExecuteSortableA = true; },
          activate: createPlaceholderBodyA,
          stop: changeSortNoA
        };
        var sortableOptionB = {
          axis: 'y',
          opacity: 0.7,
          placeholder: 'drag-placeholder',
          cursor: 'row-resize',
          handle: '.sortableActionB',
          start: function (e, ui) { isExecuteSortableB = true; },
          activate: createPlaceholderBodyB,
          stop: changeSortNoB
        };
        var sortableOptionC = {
          axis: 'y',
          opacity: 0.7,
          placeholder: 'drag-placeholder',
          cursor: 'row-resize',
          handle: '.sortableActionC',
          start: function (e, ui) { isExecuteSortableC = true; },
          activate: createPlaceholderBodyC,
          stop: changeSortNoC
        };
        var sortableOptionD = {
          axis: 'y',
          opacity: 0.7,
          placeholder: 'drag-placeholder',
          cursor: 'row-resize',
          handle: '.sortableActionD',
          start: function (e, ui) { isExecuteSortableD = true; },
          activate: createPlaceholderBodyD,
          stop: changeSortNoD
        };
        var sortableOptionE = {
          axis: 'y',
          opacity: 0.7,
          placeholder: 'drag-placeholder',
          cursor: 'row-resize',
          handle: '.sortableActionE',
          start: function (e, ui) { isExecuteSortableE = true; },
          activate: createPlaceholderBodyE,
          stop: changeSortNoE
        };
        var sortableOptionF = {
          axis: 'y',
          opacity: 0.7,
          placeholder: 'drag-placeholder',
          cursor: 'row-resize',
          handle: '.sortableActionF',
          start: function (e, ui) { isExecuteSortableF = true; },
          activate: createPlaceholderBodyF,
          stop: changeSortNoF
        };
        var sortableOptionG = {
          axis: 'y',
          opacity: 0.7,
          placeholder: 'drag-placeholder',
          cursor: 'row-resize',
          handle: '.sortableActionG',
          start: function (e, ui) { isExecuteSortableG = true; },
          activate: createPlaceholderBodyG,
          stop: changeSortNoG
        };
        var isExecuteSortableA = false;
        var isExecuteSortableB = false;
        var isExecuteSortableC = false;
        var isExecuteSortableD = false;
        var isExecuteSortableE = false;
        var isExecuteSortableF = false;
        var isExecuteSortableG = false;
        function createPlaceholderBodyA(e, ui) {
          var body = ui.item.find('.quotation-detail-itemA');
          var placeHolder = $j('.drag-placeholder');
          var bodyItem = document.createElement('div');
          for (var i = 0; i < body.length; i++) {
            var item = bodyItem.cloneNode();
            item.setAttribute('data-depth', body[i].getAttribute('data-depth'));
            placeHolder.append(item);
          }
        }
        function createPlaceholderBodyB(e, ui) {
          var body = ui.item.find('.quotation-detail-itemB');
          var placeHolder = $j('.drag-placeholder');
          var bodyItem = document.createElement('div');
          for (var i = 0; i < body.length; i++) {
            var item = bodyItem.cloneNode();
            item.setAttribute('data-depth', body[i].getAttribute('data-depth'));
            placeHolder.append(item);
          }
        }
        function createPlaceholderBodyC(e, ui) {
          var body = ui.item.find('.quotation-detail-itemC');
          var placeHolder = $j('.drag-placeholder');
          var bodyItem = document.createElement('div');
          for (var i = 0; i < body.length; i++) {
            var item = bodyItem.cloneNode();
            item.setAttribute('data-depth', body[i].getAttribute('data-depth'));
            placeHolder.append(item);
          }
        }
        function createPlaceholderBodyD(e, ui) {
          var body = ui.item.find('.quotation-detail-itemD');
          var placeHolder = $j('.drag-placeholder');
          var bodyItem = document.createElement('div');
          for (var i = 0; i < body.length; i++) {
            var item = bodyItem.cloneNode();
            item.setAttribute('data-depth', body[i].getAttribute('data-depth'));
            placeHolder.append(item);
          }
        }
        function createPlaceholderBodyE(e, ui) {
          var body = ui.item.find('.quotation-detail-itemE');
          var placeHolder = $j('.drag-placeholder');
          var bodyItem = document.createElement('div');
          for (var i = 0; i < body.length; i++) {
            var item = bodyItem.cloneNode();
            item.setAttribute('data-depth', body[i].getAttribute('data-depth'));
            placeHolder.append(item);
          }
        }
        function createPlaceholderBodyF(e, ui) {
          var body = ui.item.find('.quotation-detail-itemF');
          var placeHolder = $j('.drag-placeholder');
          var bodyItem = document.createElement('div');
          for (var i = 0; i < body.length; i++) {
            var item = bodyItem.cloneNode();
            item.setAttribute('data-depth', body[i].getAttribute('data-depth'));
            placeHolder.append(item);
          }
        }
        function createPlaceholderBodyG(e, ui) {
          var body = ui.item.find('.quotation-detail-itemG');
          var placeHolder = $j('.drag-placeholder');
          var bodyItem = document.createElement('div');
          for (var i = 0; i < body.length; i++) {
            var item = bodyItem.cloneNode();
            item.setAttribute('data-depth', body[i].getAttribute('data-depth'));
            placeHolder.append(item);
          }
        }
        function dragActionA(targetRow) {

          detailBodyBlur(lasttarget);

          setSortableA();
          var $sortableArea = $j('.quotation-detail-listA');
          var target = $j(targetRow).closest('.quotation-detail-itemA')[0];
          var $details = $j('.quotation-detail-itemA');
          var wrapdiv = document.createElement('div');
          $j(wrapdiv).addClass('quotation-detail-childWrap-itemA');
          $sortableArea.empty();
          var block = wrapdiv.cloneNode();
          var isChildNode = false;
          var targetDepth = parseInt(target.getAttribute('data-depth'), 10);
          var lastDepth = 0;

          var targetDetailType = target.getAttribute('data-type');
          for (var i = 0; i < $details.length; i++) {
            var detail = $details[i];
            var currentDetailDepth = parseInt(detail.getAttribute('data-depth'), 10);
            lastDepth = currentDetailDepth;
            if (targetDepth === currentDetailDepth || (isChildNode && targetDepth - currentDetailDepth >= 0)) {
              if (block.childNodes.length > 0) {
                $sortableArea.append(block);
              }
              block = wrapdiv.cloneNode();
              isChildNode = (targetDepth === currentDetailDepth)
            }
            block.appendChild(detail);
            if (!isChildNode && targetDepth !== 0 && targetDepth - currentDetailDepth < 2) {
              if (block.childNodes.length > 0) {
                $sortableArea.append(block);
              }
              block = wrapdiv.cloneNode();
            }
          }
          if (block.childNodes.length > 0) {
            $sortableArea.append(block);
          }
          var sortableTarget = ' .quotation-detail-childWrap-itemA';
          var excludeSelectors = [];
          if (targetDepth - lastDepth > 1 && targetDepth !== 0 && !(targetDetailType === '4' || targetDetailType === '3' || targetDetailType === '5')) {
            excludeSelectors.push(':last');
          }
          if (targetDepth !== 0) {
            excludeSelectors.push(':first');
          }
          if (excludeSelectors.length > 0) {
            sortableTarget += ':not(' + excludeSelectors.join(',') + ')'
          }
          $sortableArea.sortable('option', 'items', sortableTarget);
          $sortableArea.sortable('refresh');
          $j(document).on("mouseup", childWrapEraserA);

        }
        function dragActionB(targetRow) {
          detailBodyBlur(lasttarget);

          setSortableB();
          var $sortableArea = $j('.quotation-detail-listB');
          var target = $j(targetRow).closest('.quotation-detail-itemB')[0];
          var $details = $j('.quotation-detail-itemB');
          var wrapdiv = document.createElement('div');
          $j(wrapdiv).addClass('quotation-detail-childWrap-itemB');
          $sortableArea.empty();
          var block = wrapdiv.cloneNode();
          var isChildNode = false;
          var targetDepth = parseInt(target.getAttribute('data-depth'), 10);
          var lastDepth = 0;

          var targetDetailType = target.getAttribute('data-type');
          for (var i = 0; i < $details.length; i++) {
            var detail = $details[i];
            var currentDetailDepth = parseInt(detail.getAttribute('data-depth'), 10);
            lastDepth = currentDetailDepth;
            if (targetDepth === currentDetailDepth || (isChildNode && targetDepth - currentDetailDepth >= 0)) {
              if (block.childNodes.length > 0) {
                $sortableArea.append(block);
              }
              block = wrapdiv.cloneNode();
              isChildNode = (targetDepth === currentDetailDepth)
            }
            block.appendChild(detail);
            if (!isChildNode && targetDepth !== 0 && targetDepth - currentDetailDepth < 2) {
              if (block.childNodes.length > 0) {
                $sortableArea.append(block);
              }
              block = wrapdiv.cloneNode();
            }
          }
          if (block.childNodes.length > 0) {
            $sortableArea.append(block);
          }
          var sortableTarget = ' .quotation-detail-childWrap-itemB';
          var excludeSelectors = [];
          if (targetDepth - lastDepth > 1 && targetDepth !== 0 && !(targetDetailType === '4' || targetDetailType === '3' || targetDetailType === '5')) {
            excludeSelectors.push(':last');
          }
          if (targetDepth !== 0) {
            excludeSelectors.push(':first');
          }
          if (excludeSelectors.length > 0) {
            sortableTarget += ':not(' + excludeSelectors.join(',') + ')'
          }
          $sortableArea.sortable('option', 'items', sortableTarget);
          $sortableArea.sortable('refresh');
          $j(document).on("mouseup", childWrapEraserB);

        }
        function dragActionC(targetRow) {
          detailBodyBlur(lasttarget);

          setSortableC();
          var $sortableArea = $j('.quotation-detail-listC');
          var target = $j(targetRow).closest('.quotation-detail-itemC')[0];
          var $details = $j('.quotation-detail-itemC');
          var wrapdiv = document.createElement('div');
          $j(wrapdiv).addClass('quotation-detail-childWrap-itemC');
          $sortableArea.empty();
          var block = wrapdiv.cloneNode();
          var isChildNode = false;
          var targetDepth = parseInt(target.getAttribute('data-depth'), 10);
          var lastDepth = 0;

          var targetDetailType = target.getAttribute('data-type');
          for (var i = 0; i < $details.length; i++) {
            var detail = $details[i];
            var currentDetailDepth = parseInt(detail.getAttribute('data-depth'), 10);
            lastDepth = currentDetailDepth;
            if (targetDepth === currentDetailDepth || (isChildNode && targetDepth - currentDetailDepth >= 0)) {
              if (block.childNodes.length > 0) {
                $sortableArea.append(block);
              }
              block = wrapdiv.cloneNode();
              isChildNode = (targetDepth === currentDetailDepth)
            }
            block.appendChild(detail);
            if (!isChildNode && targetDepth !== 0 && targetDepth - currentDetailDepth < 2) {
              if (block.childNodes.length > 0) {
                $sortableArea.append(block);
              }
              block = wrapdiv.cloneNode();
            }
          }
          if (block.childNodes.length > 0) {
            $sortableArea.append(block);
          }
          var sortableTarget = ' .quotation-detail-childWrap-itemC';
          var excludeSelectors = [];
          if (targetDepth - lastDepth > 1 && targetDepth !== 0 && !(targetDetailType === '4' || targetDetailType === '3' || targetDetailType === '5')) {
            excludeSelectors.push(':last');
          }
          if (targetDepth !== 0) {
            excludeSelectors.push(':first');
          }
          if (excludeSelectors.length > 0) {
            sortableTarget += ':not(' + excludeSelectors.join(',') + ')'
          }
          $sortableArea.sortable('option', 'items', sortableTarget);
          $sortableArea.sortable('refresh');
          $j(document).on("mouseup", childWrapEraserC);

        }
        function dragActionD(targetRow) {
          detailBodyBlur(lasttarget);

          setSortableD();
          var $sortableArea = $j('.quotation-detail-listD');
          var target = $j(targetRow).closest('.quotation-detail-itemD')[0];
          var $details = $j('.quotation-detail-itemD');
          var wrapdiv = document.createElement('div');
          $j(wrapdiv).addClass('quotation-detail-childWrap-itemD');
          $sortableArea.empty();
          var block = wrapdiv.cloneNode();
          var isChildNode = false;
          var targetDepth = parseInt(target.getAttribute('data-depth'), 10);
          var lastDepth = 0;

          var targetDetailType = target.getAttribute('data-type');
          for (var i = 0; i < $details.length; i++) {
            var detail = $details[i];
            var currentDetailDepth = parseInt(detail.getAttribute('data-depth'), 10);
            lastDepth = currentDetailDepth;
            if (targetDepth === currentDetailDepth || (isChildNode && targetDepth - currentDetailDepth >= 0)) {
              if (block.childNodes.length > 0) {
                $sortableArea.append(block);
              }
              block = wrapdiv.cloneNode();
              isChildNode = (targetDepth === currentDetailDepth)
            }
            block.appendChild(detail);
            if (!isChildNode && targetDepth !== 0 && targetDepth - currentDetailDepth < 2) {
              if (block.childNodes.length > 0) {
                $sortableArea.append(block);
              }
              block = wrapdiv.cloneNode();
            }
          }
          if (block.childNodes.length > 0) {
            $sortableArea.append(block);
          }
          var sortableTarget = ' .quotation-detail-childWrap-itemD';
          var excludeSelectors = [];
          if (targetDepth - lastDepth > 1 && targetDepth !== 0 && !(targetDetailType === '4' || targetDetailType === '3' || targetDetailType === '5')) {
            excludeSelectors.push(':last');
          }
          if (targetDepth !== 0) {
            excludeSelectors.push(':first');
          }
          if (excludeSelectors.length > 0) {
            sortableTarget += ':not(' + excludeSelectors.join(',') + ')'
          }
          $sortableArea.sortable('option', 'items', sortableTarget);
          $sortableArea.sortable('refresh');
          $j(document).on("mouseup", childWrapEraserD);

        }
        function dragActionE(targetRow) {
          detailBodyBlur(lasttarget);

          setSortableE();
          var $sortableArea = $j('.quotation-detail-listE');
          var target = $j(targetRow).closest('.quotation-detail-itemE')[0];
          var $details = $j('.quotation-detail-itemE');
          var wrapdiv = document.createElement('div');
          $j(wrapdiv).addClass('quotation-detail-childWrap-itemE');
          $sortableArea.empty();
          var block = wrapdiv.cloneNode();
          var isChildNode = false;
          var targetDepth = parseInt(target.getAttribute('data-depth'), 10);
          var lastDepth = 0;

          var targetDetailType = target.getAttribute('data-type');
          for (var i = 0; i < $details.length; i++) {
            var detail = $details[i];
            var currentDetailDepth = parseInt(detail.getAttribute('data-depth'), 10);
            lastDepth = currentDetailDepth;
            if (targetDepth === currentDetailDepth || (isChildNode && targetDepth - currentDetailDepth >= 0)) {
              if (block.childNodes.length > 0) {
                $sortableArea.append(block);
              }
              block = wrapdiv.cloneNode();
              isChildNode = (targetDepth === currentDetailDepth)
            }
            block.appendChild(detail);
            if (!isChildNode && targetDepth !== 0 && targetDepth - currentDetailDepth < 2) {
              if (block.childNodes.length > 0) {
                $sortableArea.append(block);
              }
              block = wrapdiv.cloneNode();
            }
          }
          if (block.childNodes.length > 0) {
            $sortableArea.append(block);
          }
          var sortableTarget = ' .quotation-detail-childWrap-itemE';
          var excludeSelectors = [];
          if (targetDepth - lastDepth > 1 && targetDepth !== 0 && !(targetDetailType === '4' || targetDetailType === '3' || targetDetailType === '5')) {
            excludeSelectors.push(':last');
          }
          if (targetDepth !== 0) {
            excludeSelectors.push(':first');
          }
          if (excludeSelectors.length > 0) {
            sortableTarget += ':not(' + excludeSelectors.join(',') + ')'
          }
          $sortableArea.sortable('option', 'items', sortableTarget);
          $sortableArea.sortable('refresh');
          $j(document).on("mouseup", childWrapEraserE);

        }
        function dragActionF(targetRow) {
          detailBodyBlur(lasttarget);

          setSortableF();
          var $sortableArea = $j('.quotation-detail-listF');
          var target = $j(targetRow).closest('.quotation-detail-itemF')[0];
          var $details = $j('.quotation-detail-itemF');
          var wrapdiv = document.createElement('div');
          $j(wrapdiv).addClass('quotation-detail-childWrap-itemF');
          $sortableArea.empty();
          var block = wrapdiv.cloneNode();
          var isChildNode = false;
          var targetDepth = parseInt(target.getAttribute('data-depth'), 10);
          var lastDepth = 0;

          var targetDetailType = target.getAttribute('data-type');
          for (var i = 0; i < $details.length; i++) {
            var detail = $details[i];
            var currentDetailDepth = parseInt(detail.getAttribute('data-depth'), 10);
            lastDepth = currentDetailDepth;
            if (targetDepth === currentDetailDepth || (isChildNode && targetDepth - currentDetailDepth >= 0)) {
              if (block.childNodes.length > 0) {
                $sortableArea.append(block);
              }
              block = wrapdiv.cloneNode();
              isChildNode = (targetDepth === currentDetailDepth)
            }
            block.appendChild(detail);
            if (!isChildNode && targetDepth !== 0 && targetDepth - currentDetailDepth < 2) {
              if (block.childNodes.length > 0) {
                $sortableArea.append(block);
              }
              block = wrapdiv.cloneNode();
            }
          }
          if (block.childNodes.length > 0) {
            $sortableArea.append(block);
          }
          var sortableTarget = ' .quotation-detail-childWrap-itemF';
          var excludeSelectors = [];
          if (targetDepth - lastDepth > 1 && targetDepth !== 0 && !(targetDetailType === '4' || targetDetailType === '3' || targetDetailType === '5')) {
            excludeSelectors.push(':last');
          }
          if (targetDepth !== 0) {
            excludeSelectors.push(':first');
          }
          if (excludeSelectors.length > 0) {
            sortableTarget += ':not(' + excludeSelectors.join(',') + ')'
          }
          $sortableArea.sortable('option', 'items', sortableTarget);
          $sortableArea.sortable('refresh');
          $j(document).on("mouseup", childWrapEraserF);

        }
        function dragActionG(targetRow) {
          detailBodyBlur(lasttarget);

          setSortableG();
          var $sortableArea = $j('.quotation-detail-listG');
          var target = $j(targetRow).closest('.quotation-detail-itemG')[0];
          var $details = $j('.quotation-detail-itemG');
          var wrapdiv = document.createElement('div');
          $j(wrapdiv).addClass('quotation-detail-childWrap-itemG');
          $sortableArea.empty();
          var block = wrapdiv.cloneNode();
          var isChildNode = false;
          var targetDepth = parseInt(target.getAttribute('data-depth'), 10);
          var lastDepth = 0;

          var targetDetailType = target.getAttribute('data-type');
          for (var i = 0; i < $details.length; i++) {
            var detail = $details[i];
            var currentDetailDepth = parseInt(detail.getAttribute('data-depth'), 10);
            lastDepth = currentDetailDepth;
            if (targetDepth === currentDetailDepth || (isChildNode && targetDepth - currentDetailDepth >= 0)) {
              if (block.childNodes.length > 0) {
                $sortableArea.append(block);
              }
              block = wrapdiv.cloneNode();
              isChildNode = (targetDepth === currentDetailDepth)
            }
            block.appendChild(detail);
            if (!isChildNode && targetDepth !== 0 && targetDepth - currentDetailDepth < 2) {
              if (block.childNodes.length > 0) {
                $sortableArea.append(block);
              }
              block = wrapdiv.cloneNode();
            }
          }
          if (block.childNodes.length > 0) {
            $sortableArea.append(block);
          }
          var sortableTarget = ' .quotation-detail-childWrap-itemG';
          var excludeSelectors = [];
          if (targetDepth - lastDepth > 1 && targetDepth !== 0 && !(targetDetailType === '4' || targetDetailType === '3' || targetDetailType === '5')) {
            excludeSelectors.push(':last');
          }
          if (targetDepth !== 0) {
            excludeSelectors.push(':first');
          }
          if (excludeSelectors.length > 0) {
            sortableTarget += ':not(' + excludeSelectors.join(',') + ')'
          }
          $sortableArea.sortable('option', 'items', sortableTarget);
          $sortableArea.sortable('refresh');
          $j(document).on("mouseup", childWrapEraserG);

        }
        function childWrapEraserA() {
          if (!isExecuteSortableA) {
            var details = $j('.quotation-detail-itemA');
            $j('.quotation-detail-childWrap-itemA').remove();
            $j('.quotation-detail-listA').append(details);
          }
          isExecuteSortableA = false;
          $j(document).off("mouseup", childWrapEraserA);
        }
        function childWrapEraserB() {
          if (!isExecuteSortableB) {
            var details = $j('.quotation-detail-itemB');
            $j('.quotation-detail-childWrap-itemB').remove();
            $j('.quotation-detail-listB').append(details);
          }
          isExecuteSortableB = false;
          $j(document).off("mouseup", childWrapEraserB);
        }
        function childWrapEraserC() {
          if (!isExecuteSortableC) {
            var details = $j('.quotation-detail-itemC');
            $j('.quotation-detail-childWrap-itemC').remove();
            $j('.quotation-detail-listC').append(details);
          }
          isExecuteSortableC = false;
          $j(document).off("mouseup", childWrapEraserC);
        }
        function childWrapEraserD() {
          if (!isExecuteSortableD) {
            var details = $j('.quotation-detail-itemD');
            $j('.quotation-detail-childWrap-itemD').remove();
            $j('.quotation-detail-listD').append(details);
          }
          isExecuteSortableD = false;
          $j(document).off("mouseup", childWrapEraserD);
        }
        function childWrapEraserE() {
          if (!isExecuteSortableE) {
            var details = $j('.quotation-detail-itemE');
            $j('.quotation-detail-childWrap-itemE').remove();
            $j('.quotation-detail-listE').append(details);
          }
          isExecuteSortableE = false;
          $j(document).off("mouseup", childWrapEraserE);
        }
        function childWrapEraserF() {
          if (!isExecuteSortableF) {
            var details = $j('.quotation-detail-itemF');
            $j('.quotation-detail-childWrap-itemF').remove();
            $j('.quotation-detail-listF').append(details);
          }
          isExecuteSortableF = false;
          $j(document).off("mouseup", childWrapEraserF);
        }
        function childWrapEraserG() {
          if (!isExecuteSortableG) {
            var details = $j('.quotation-detail-itemG');
            $j('.quotation-detail-childWrap-itemG').remove();
            $j('.quotation-detail-listG').append(details);
          }
          isExecuteSortableG = false;
          $j(document).off("mouseup", childWrapEraserG);
        }
        function changeSortNoA(e, ui) {
          var details = $j('.quotation-detail-itemA');
          var sortableArea = $j('.quotation-detail-listA');
          sortableArea.empty();

          RowManageA.init();
          for (var i = 0; i < details.length; i++) {
            var detail = details[i];
            setSortNo(detail, i);
            sortableArea.append(detail);
            RowManageA.push(detail);
          }
          RowManageA.calcurate();
          calcurate();
        }
        function changeSortNoB(e, ui) {
          var details = $j('.quotation-detail-itemB');
          var sortableArea = $j('.quotation-detail-listB');
          sortableArea.empty();

          RowManageB.init();
          for (var i = 0; i < details.length; i++) {
            var detail = details[i];
            setSortNo(detail, i);
            sortableArea.append(detail);
            RowManageB.push(detail);
          }
          RowManageB.calcurate();
          calcurate();
        }
        function changeSortNoC(e, ui) {
          var details = $j('.quotation-detail-itemC');
          var sortableArea = $j('.quotation-detail-listC');
          sortableArea.empty();

          RowManageC.init();
          for (var i = 0; i < details.length; i++) {
            var detail = details[i];
            setSortNo(detail, i);
            sortableArea.append(detail);
            RowManageC.push(detail);
          }
          RowManageC.calcurate();
          calcurate();
        }
        function changeSortNoD(e, ui) {
          var details = $j('.quotation-detail-itemD');
          var sortableArea = $j('.quotation-detail-listD');
          sortableArea.empty();

          RowManageD.init();
          for (var i = 0; i < details.length; i++) {
            var detail = details[i];
            setSortNo(detail, i);
            sortableArea.append(detail);
            RowManageD.push(detail);
          }
          RowManageD.calcurate();
          calcurate();
        }
        function changeSortNoE(e, ui) {
          var details = $j('.quotation-detail-itemE');
          var sortableArea = $j('.quotation-detail-listE');
          sortableArea.empty();

          RowManageE.init();
          for (var i = 0; i < details.length; i++) {
            var detail = details[i];
            setSortNo(detail, i);
            sortableArea.append(detail);
            RowManageE.push(detail);
          }
          RowManageE.calcurate();
          calcurate();
        }
        function changeSortNoF(e, ui) {
          var details = $j('.quotation-detail-itemF');
          var sortableArea = $j('.quotation-detail-listF');
          sortableArea.empty();

          RowManageF.init();
          for (var i = 0; i < details.length; i++) {
            var detail = details[i];
            setSortNo(detail, i);
            sortableArea.append(detail);
            RowManageF.push(detail);
          }
          RowManageF.calcurate();
          calcurate();
        }
        function changeSortNoG(e, ui) {
          var details = $j('.quotation-detail-itemG');
          var sortableArea = $j('.quotation-detail-listG');
          sortableArea.empty();

          RowManageG.init();
          for (var i = 0; i < details.length; i++) {
            var detail = details[i];
            setSortNo(detail, i);
            sortableArea.append(detail);
            RowManageG.push(detail);
          }
          RowManageG.calcurate();
          calcurate();
        }
        function setSortNo(target, sortNo) {
          var $target = $j(target)
          target.setAttribute('data-sortNo', sortNo);
          $target.find('.quotation-detail-sortNo').val(sortNo);
        }

        /*-----------------------------------------------*/
        var productAConfig = {
          fields: [
            { sobjectField: ['ParentModelType__c'], label: 'Model Type', className: 'master-ModelType', targetFormClassName: "quotation-detail-ModelType" },
            { sobjectField: ['ParentEnglishName__c'], label: 'Item', className: 'master-productName', targetFormClassName: 'quotation-detail-productName' },
            { sobjectField: ['ProductItem__r', 'Kikaku__c'], label: ['Spec'] },
            { sobjectField: ['Price__c'], label: 'Price', className: 'number', targetFormClassName: 'quotation-detail-UnitPrice' },
            { sobjectField: ['CostCurrency__c'], label: 'Cur', className: 'costCurrency', targetFormClassName: 'quotation-detail-CostCurrency' }
          ]
        };
        var productBConfig = {
          fields: [
            { sobjectField: ['ModelType__c'], label: 'Model Type', className: 'master-ModelType', targetFormClassName: "quotation-detail-ModelType", hidden: true },
            { sobjectField: ['EnglishName__c'], label: 'Item', className: 'master-productName', targetFormClassName: 'quotation-detail-productName' },
            { sobjectField: ['Supplier__c'], label: 'Supplier', className: 'master-supplier', targetFormClassName: 'quotation-detail-Supplier' }
          ]
        };
        var productG1Config = {
          fields: [
            { sobjectField: ['ParentModelType__c'], label: 'Model Type', className: 'master-ModelType', targetFormClassName: "quotation-detail-ModelType" },
            { sobjectField: ['ParentEnglishName__c'], label: 'Item', className: 'master-productName', targetFormClassName: 'quotation-detail-productName' },
            { sobjectField: ['ProductItem__r', 'Kikaku__c'], label: ['Spec'] },
            { sobjectField: ['Price__c'], label: 'Price', className: 'number', targetFormClassName: 'quotation-detail-UnitPrice' },
            { sobjectField: ['CostCurrency__c'], label: 'Cur', className: 'costCurrency', targetFormClassName: 'quotation-detail-CostCurrency' }
          ]
        };
        var productG2Config = {
          fields: [
            { sobjectField: ['ParentModelType__c'], label: 'Model Type', className: 'master-ModelType', targetFormClassName: "quotation-detail-ModelType", hidden: true },
            { sobjectField: ['ParentEnglishName__c'], label: 'Item', className: 'master-productName', targetFormClassName: 'quotation-detail-productName' },
            { sobjectField: ['Price__c'], label: 'Price', className: 'number', targetFormClassName: 'quotation-detail-UnitPrice' },
            { sobjectField: ['ProductItem__r', 'Supplier__c'], label: 'Supplier', className: 'master-supplier', targetFormClassName: 'quotation-detail-Supplier' },
            { sobjectField: ['CostCurrency__c'], label: 'Cur', className: 'costCurrency', targetFormClassName: 'quotation-detail-CostCurrency' }
          ]
        };
        var catalogAConfig = {
          fields: [
            { sobjectField: ['ProductItem__r', 'Name'], appendTargetField: ['Name'], className: 'master-catalogModelType', targetFormClassName: 'catalogModelType', hidden: true },
            { sobjectField: ['ProductItem__r', 'EnglishName__c'], appendTargetField: ['ParentEnglishName__c'], className: 'master-catalogProductName', targetFormClassName: 'catalogProductName' },
            { sobjectField: ['ProductItem__r', 'ModelTypeDisplay__c'], appendTargetField: ['ParentModelType__c'], className: 'master-catalogProductModelType', targetFormClassName: 'catalogProductModelType' },
            { sobjectField: ['AdditionalInformation__c'], appendTargetField: ['ParentFullName__c'], className: 'master-catalogProductModelType2', targetFormClassName: 'catalogProductModelType2' },
            { sobjectField: ['NumberOfMounting__c'], appendTargetField: ['NumberOfMounting__c'], className: 'master-NumberOfMounting__c', targetFormClassName: 'NumberOfMounting', hidden: true },
            { sobjectField: ['LocalSupplyFlag__c'], appendTargetField: ['LocalSupplyFlag__c'], className: 'master-LocalSupplyFlag', targetFormClassName: 'LocalSupplyFlag', hidden: true },
            { sobjectField: ['ProductItem__c'], appendTargetField: ['ProductItem__c'], className: 'master-catalogProductItem', targetFormClassName: 'catalogProductItem', hidden: true }
          ]
        };
        var catalogGConfig = {
          fields: [
            { sobjectField: ['ProductItem__r', 'Name'], appendTargetField: ['Name'], className: 'master-catalogModelType', targetFormClassName: 'catalogModelType', hidden: true },
            { sobjectField: ['ProductItem__r', 'EnglishName__c'], appendTargetField: ['ParentEnglishName__c'], className: 'master-catalogProductName', targetFormClassName: 'catalogProductName' },
            { sobjectField: ['ProductItem__r', 'ModelTypeDisplay__c'], appendTargetField: ['ParentModelType__c'], className: 'master-catalogProductModelType', targetFormClassName: 'catalogProductModelType' },
            { sobjectField: ['AdditionalInformation__c'], appendTargetField: ['ParentFullName__c'], className: 'master-catalogProductModelType2', targetFormClassName: 'catalogProductModelType2' },
            { sobjectField: ['NumberOfMounting__c'], appendTargetField: ['NumberOfMounting__c'], className: 'master-NumberOfMounting__c', targetFormClassName: 'NumberOfMounting', hidden: true },
            { sobjectField: ['LocalSupplyFlag__c'], appendTargetField: ['LocalSupplyFlag__c'], className: 'master-LocalSupplyFlag', targetFormClassName: 'LocalSupplyFlag', hidden: true },
            { sobjectField: ['ProductItem__c'], appendTargetField: ['ProductItem__c'], className: 'master-catalogProductItem', targetFormClassName: 'catalogProductItem', hidden: true }
          ]
        };

        var detailTypes = ['明細', '見出し', '諸経費', '小計', '口銭'];
        var detailFieldConfigures = {
          fields: [
            {
              sobjectField: ['Type__c'], label: '明細タイプ', resultFunc: function (resultValue) {
                var ret = '';
                if (resultValue) {
                  ret = detailTypes[parseInt(resultValue, 10) - 1];
                }
                return ret;
              }
            },
            { sobjectField: ['Body__c'], label: '内容' },
            { sobjectField: ['ModelType__c'], label: '{!$Label.JEOL_QuotEdit_Label_ItemNo}' },
            { sobjectField: ['Quantity__c'], label: '数量', className: 'number' }
          ]
        };

        var divNode = document.createElement('div');
        function render(records, renderTarget, renderConfigure, eventFunction) {
          var records = records;
          var body = renderTarget;
          body.empty();
          var $table = $j(divNode.cloneNode());
          $table.addClass('table');
          var $headerRow = $j(divNode.cloneNode());
          $headerRow.addClass('item');
          $table.append($headerRow);
          var config = renderConfigure;
          var fieldSettings = config.fields;
          for (var i = 0; i < records.length; i++) {
            var currentTarget = records[i];
            var $item = $j(divNode.cloneNode());
            $item.addClass('item');
            for (key in eventFunction) {
              $item.on(key, eventFunction[key]);
            }
            if (fieldSettings) {
              for (var j = 0; j < fieldSettings.length; j++) {
                var fieldConfigure = fieldSettings[j];
                if (fieldConfigure.sobjectField) {
                  var fieldValue = getFieldValue(currentTarget, fieldConfigure.sobjectField);
                  if (i === 0) {
                    var $headItem = createField(fieldConfigure.label);
                    $headItem.addClass('head');
                    if (fieldConfigure.hidden) {
                      $headItem.css({ display: 'none' });
                    }
                    $headerRow.append($headItem);
                  }
                  $headerRow.append($headItem);
                  if (fieldConfigure.resultFunc && typeof fieldConfigure.resultFunc === "function") {
                    fieldValue = fieldConfigure.resultFunc(fieldValue);
                  }
                  $field = createField(fieldValue, fieldConfigure.className);
                  $item.append($field)
                  if (fieldConfigure.hidden) {
                    $field.css({ display: 'none' });
                  }
                }
              }
              $table.append($item);
            }
          }
          body.append($table);
          return body.find('.item');
        }
        function getFieldValue(targetSobject, fieldNameArray) {
          var target = targetSobject;
          for (var i = 0; i < fieldNameArray.length; i++) {
            var fieldName = fieldNameArray[i];
            if (fieldName && typeof target[fieldName] !== "undefined") {
              target = target[fieldName];
              if (typeof target == "string") {
                target = convert(target);
              }
            } else {
              target = '';
              break;
            }
          }
          return target;
        }

        var convert = function (convert) {
          return $j("<span />", { html: convert }).text();
        };

        function createField(value, fieldClass) {
          var field = $j(divNode.cloneNode());
          field.addClass('field');
          var fieldValue = $j(divNode.cloneNode());
          fieldClass = ' ' + (fieldClass ? fieldClass : '');
          fieldValue.addClass('field-value' + fieldClass);

          fieldValue.text(value);
          field.append(fieldValue);
          return field;
        }
        function pagerInfo(manage, targetNode) {
          var manager = manage;
          var $pagerArea = $j(targetNode).find('.pager-area');
          var currentPageNum = manager.getPageNumber();
          $pagerArea.find('.current-page-number').text(currentPageNum);
          if (currentPageNum > 1) {
            $pagerArea.find('.prev.customButton').show();
            $pagerArea.find('.prev.disabled-button').hide();
          } else {
            $pagerArea.find('.prev.customButton').hide();
            $pagerArea.find('.prev.disabled-button').show();
          }
          var maxPageNum = manager.maxPageNumber();
          $pagerArea.find('.max-page-number').text(maxPageNum);
          if (maxPageNum > currentPageNum) {
            $pagerArea.find('.next.customButton').show();
            $pagerArea.find('.next.disabled-button').hide();
          } else {
            $pagerArea.find('.next.customButton').hide();
            $pagerArea.find('.next.disabled-button').show();
          }
        }



        /*------------------------------------------------------------*/
        //
        //  品目複数選択画面    品目検索 カタログ検索 SECTION A
        //
        /*------------------------------------------------------------*/

        function initDetailProductAItemManage($targetNode) {

          $j('#productAItemSearch').removeClass("hidden");
          $j('#productBItemSearch').addClass("hidden");
          $j('#productG1ItemSearch').addClass("hidden");
          $j('#productG2ItemSearch').addClass("hidden");

          if ($j("select[name*=':quotationType']").find("option:selected").text() == $j("input[name*=':quotation-unit-label']").val()) {
            $j('#catalogAItemSearch').removeClass("hidden");
          } else {
            $j('#catalogAItemSearch').addClass("hidden");
          }
          $j('#catalogGItemSearch').addClass("hidden");

          tabSelection($j('#productAItemSearch'));

          detailProductAItemManage.setTargetNode($targetNode);
          detailProductACatalogManage.setTargetNode($targetNode);

        }

        var detailProductAItemManage = new PagerHelper();
        detailProductAItemManage.setPageSize(13);
        detailProductAItemManage.setConfig(productAConfig);

        function productAItemSearchJS() {
          var conditions = queryCondition($j('#detailProductAItemSearchArea'));
          conditions['sectionItem'] = 'A';
          detailProductAItemsQuery(conditions);
        }
        function detailProductAItemsQuery(conditions) {
          $j('#detailProductItemView .modal-content').addClass('ajax-loading');

          var quotationType = $j("select[name*=':quotationType']").val();

          JEOLAsia_SvcReportCtrl.getProductMaster(conditions, '', quotationType, function (result) {
            if (result) {
              var manage = detailProductAItemManage;
              manage.setRecords(result);
              var $modal = $j('#detailProductItemView');
              var $items = render(manage.getRecords(), $modal.find('#productAItemTabPanel .item-list'), manage.getConfig());
              $items.draggable(draggableOption);
              var errorText = '';
              if (manage.size() >= 10000) {
                errorText = 'The search returned too many rows. Only the 10,000 first datas will be displayed.';
                showAlert(errorText);
              }
              pagerInfo(detailProductAItemManage, $j('#productAItemTabPanel'));
              if ($modal.find('#productAItemTabPanel .auto-close-check').prop('checked')) {
                $j('#detailProductAItemSearchArea').collapse('hide');
              }
            } else {
              showAlert('Information could not be retrieved. Try again later.');
            }
            $j('#detailProductItemView .modal-content').removeClass('ajax-loading');
          });
        }
        function nextRecordsAddDraggableA() {
          var $modal = $j('#detailProductItemView');
          var $items = render(detailProductAItemManage.next(), $modal.find('#productAItemTabPanel .item-list'), detailProductAItemManage.getConfig());
          $items.draggable(draggableOption);
          pagerInfo(detailProductAItemManage, $j('#productAItemTabPanel'));
        }
        function prevRecordsAddDraggableA() {
          var $modal = $j('#detailProductItemView');
          var $items = render(detailProductAItemManage.prev(), $modal.find('#productAItemTabPanel .item-list'), detailProductAItemManage.getConfig());
          $items.draggable(draggableOption);
          pagerInfo(detailProductAItemManage, $j('#productAItemTabPanel'));
        }

        function chooseItemDetailProductA() {
          var items = [];
          var config = detailProductAItemManage.getConfig();
          var fields = config.fields;
          var $modal = $j('#detailProductItemView');
          var $selectedItems = $modal.find('#productAItemTabPanel .item.selected');
          if ($selectedItems.length) {
            for (var i = 0; i < $selectedItems.length; i++) {
              var $selectedItem = $j($selectedItems[i]);
              var values = [];
              for (var j = 0; j < fields.length; j++) {
                var field = fields[j];
                if (field.targetFormClassName) {
                  var value = $selectedItem.find('.' + field.className).text();
                  values.push('"' + field.sobjectField.join('.') + '":"' + value + '"');
                }
              }
              items.push('{' + values.join(',') + '}');
            }
            var $targetNode = detailProductAItemManage.getTargetNode();
            var targetSortNo = $targetNode[0].getAttribute('data-sortNo');
            var jsonText = '{' +
              '"sortNo":"' + targetSortNo + '",' +
              '"items":[' + items.join(',') + ']' +
              '}';

            createSelectedProductAItemDetails(jsonText);
            $modal.modal('hide');
          } else {
            showAlert('Please select the items to add.');
          }
        }

        var detailProductACatalogManage = new PagerHelper();
        detailProductACatalogManage.setPageSize(10000);
        detailProductACatalogManage.setConfig(catalogAConfig);

        function productACatalogSearch() {
          var conditions = queryCondition($j('#detailProductACatalogSearchArea'));
          detailProductACatalogQuery(conditions);
        }

        function detailProductACatalogQuery(conditions) {
          $j('#detailProductItemView .modal-content').addClass('ajax-loading');
          JEOLAsia_SvcReportCtrl.getCatalogHead(conditions, function (result) {
            if (result) {
              var manage = detailProductACatalogManage;
              manage.setRecords(result);
              var $modal = $j('#detailProductItemView');
              var $items = catalogRenderA(manage.getRecords(), $modal.find('#productACatalogTabPanel .item-list'), manage.getConfig(), { "click": getChildCatalogStructureA }, true);
              $items.draggable(draggableOption);
              var errorText = '';
              if (manage.size() >= 10000) {
                errorText = '検索結果が多いため10000件まで表示します。';
                showAlert(errorText);
              }
              //pagerInfo(detailProductACatalogManage, $j('#productACatalogTabPanel'));
              if ($modal.find('#productACatalogTabPanel .auto-close-check').prop('checked')) {
                $j('#detailProductACatalogSearchArea').collapse('hide');
              }
            } else {
              showAlert('情報を取得できませんでした。再度検索してみてください。');
            }
            $j('#detailProductItemView .modal-content').removeClass('ajax-loading');
          });
        }

        function getChildCatalogStructureA(e) {
          var $target = $j(e.target);
          var $parentItem = $target.closest('.item');
          if (!$parentItem.hasClass('got-items')) {
            $j('#detailProductItemView .modal-content').addClass('ajax-loading');
            JEOLAsia_SvcReportCtrl.getChildCatalogStructure($parentItem[0].getAttribute('data-catalog'), $parentItem[0].getAttribute('data-target'), $parentItem[0].getAttribute('data-position'), function (result, event) {
              childCatalogStructureCallBackA(result, event, $parentItem);
              $j('#detailProductItemView .modal-content').removeClass('ajax-loading');
            });
          }
          $parentItem.toggleClass('open');
          e.preventDefault();
          return false;
        }
        function childCatalogStructureCallBackA(result, event, $parentItem) {
          var ret = null;
          if (event.status) {
            var $childWrapper = $j(divNode.cloneNode());
            $childWrapper.addClass('children');
            $parentItem.append($childWrapper);
            var manage = detailProductACatalogManage;
            manage.setRecords(result);
            var $modal = $j('#detailProductItemView');
            var $items = catalogRenderA(manage.getRecords(), $childWrapper, manage.getConfig(), { "click": getChildCatalogStructureA });
            if (!$parentItem.hasClass('non-select-drag')) {
              $items.draggable(draggableOption);
            } else {
              $items.addClass('selected non-select-drag');
              $items.draggable(selectedDraggableOption);
            }
            var errorText = '';
            if (manage.size() >= 10000) {
              errorText = '検索結果が多いため10000件まで表示します。';
              showAlert(errorText);
            }
            ret = $items;
          } else {
            showAlert('情報を取得できませんでした。再度検索してみてください。');
          }
          $parentItem.addClass('got-items');
          return ret;
        }
        function catalogRenderA(records, renderTarget, renderConfigure, eventFunction, isRoot) {
          var records = records;
          var body = renderTarget;
          body.empty();
          var $tree = $j(divNode.cloneNode());
          $tree.addClass('tree');
          var config = renderConfigure;
          var fieldSettings = config.fields;
          for (var i = 0; i < records.length; i++) {
            var currentTarget = records[i];
            var $item = $j(divNode.cloneNode());
            $item.addClass('item');

            var $view = $j(divNode.cloneNode());
            $view.addClass('tree-view');
            $item.append($view);
            var $fieldSet = $j(divNode.cloneNode());
            $fieldSet.addClass('tree-fieldset');
            $item.append($fieldSet);
            if (fieldSettings) {
              createCatalogItemDetailA(currentTarget, $view, $fieldSet, fieldSettings);
              if ((currentTarget.Position__c === 1 && isRoot) || currentTarget.ClassificationType__c == 1) {
                for (key in eventFunction) {
                  $view.on(key, eventFunction[key]);
                }
                var structure = null;
                if (currentTarget.Position__c === 1) {
                  structure = currentTarget.CatalogStructure__c;
                } else {
                  structure = currentTarget.ClassificationNo__c;
                }
                $item[0].setAttribute('data-target', structure);
                $item[0].setAttribute('data-catalog', currentTarget.ProductCatalog__c);
              }
              if (currentTarget.Position__c === 1 && !isRoot) {
                // < !--$item[0].setAttribute('data-exclude-json-data', true); -->
              }
              var targetPosition = currentTarget.Position__c;
              $item[0].setAttribute('data-position', targetPosition);
              if (currentTarget.EnglishText__c) {
                $item[0].setAttribute('title', currentTarget.EnglishText__c);
              } else {
                $item[0].setAttribute('title', '');
              }

              $item[0].className += " showTooltipEnglishText";
              $tree.append($item);
            }
          }
          body.append($tree);
          return body.find('.item');
        }
        function createCatalogItemDetailA(target, $view, $fieldSet, fieldSettings) {
          var viewTexts = [];
          for (var i = 0; i < fieldSettings.length; i++) {
            var fieldConfigure = fieldSettings[i];
            if (fieldConfigure.sobjectField) {
              var fieldValue = getFieldValue(target, fieldConfigure.sobjectField);
              if (fieldConfigure.resultFunc && typeof fieldConfigure.resultFunc === "function") {
                fieldValue = fieldConfigure.resultFunc(fieldValue);
              }
              if (!fieldConfigure.hidden && fieldValue.length > 0) {
                viewTexts.push(fieldValue);
              }
              var $field = createField(fieldValue, fieldConfigure.className);
              $fieldSet.append($field);
              /*if (fieldConfigure.hidden) {
                  $field.css({display: 'none'});
              }*/
            }
          }
          $view.text(viewTexts.join(' '));
        }

        var asyncGetStructrueQueue = null;
        var fAlreadySent = true;
        // < !--Used to send it only once.If not, when the main folder has been opened, but not the child folders, the content of the child folder is added twice(reason unknown)(By Polus on 2015 / 06 / 16)-- >

        function chooseCatalogDetailProductA() {
          var items = [];
          asyncGetStructrueQueue = {};
          fAlreadySent = false;
          var config = detailProductACatalogManage.getConfig();
          var fields = config.fields;
          var $modal = $j('#detailProductItemView');
          var $selectedItems = $modal.find('#productACatalogTabPanel .item.selected');
          if ($selectedItems.length) {
            $j('#detailProductItemView .modal-content').addClass('ajax-loading');
            getAllStructureA($selectedItems);
          } else {
            showAlert('Please select the items to add.');
          }
        }
        function getAllStructureA($targets) {
          if ($targets.length) {
            for (var i = 0; i < $targets.length; i++) {
              var item = $targets[i];
              var $item = $j(item);
              var targetCatalog = item.getAttribute('data-catalog');
              var targetStructure = item.getAttribute('data-target');
              var targetPosition = item.getAttribute('data-position');
              if ($item.hasClass('got-items') && targetStructure && targetStructure.length) {
                // < !--The folder has been opened-- >
                asyncGetStructrueQueue[targetStructure] = item;
                getAllStructureA($item.find('.children>.tree>.item'));
                delete asyncGetStructrueQueue[targetStructure];
              } else if (targetStructure && targetStructure.length) {
                // < !--The folder has not been opened, all childs should be added-- >
                asyncGetStructrueQueue[targetStructure] = item;
                getCatalogStructureCallA($item, targetCatalog, targetStructure, targetPosition);
              }
            }
          }
          var queueLen = 0;
          for (key in asyncGetStructrueQueue) {
            queueLen++;
          }
          if (queueLen <= 0 && !fAlreadySent) {
            fAlreadySent = true;
            createImportCatalogJsonA();
          }
        }
        function getCatalogStructureCallA($item, targetCatalog, targetStructure, targetPosition) {
          JEOLAsia_SvcReportCtrl.getChildCatalogStructure(targetCatalog, targetStructure, targetPosition, function (result, event) {
            var $items = childCatalogStructureCallBackA(result, event, $item);
            delete asyncGetStructrueQueue[targetStructure];
            if ($items) {
              getAllStructureA($items);
            }
          });
        }
        function createImportCatalogJsonA() {
          var $items = $j('#detailProductItemView #productACatalogTabPanel #selected-list-catalog-A>.tree>.item');
          var jsonItems = [];
          getCatalogJsonA($items, jsonItems, 0);
          var $targetNode = detailProductACatalogManage.getTargetNode();
          var targetSortNo = $targetNode[0].getAttribute('data-sortNo');
          var jsonText = '{' +
            '"sortNo":"' + targetSortNo + '",' +
            '"items":[' + jsonItems.join(',') + ']' +
            '}';
          var parsedJson = JSON.parse(jsonText);

          createSelectedProductAItemDetails(jsonText);
          $j('#detailProductItemView .modal-content').removeClass('ajax-loading');
          $j('#detailProductItemView').modal('hide');
        }

        function getCatalogJsonA($items, jsonItems, depth) {

          var config = detailProductACatalogManage.getConfig();
          var fields = config.fields;
          for (var i = 0; i < $items.length; i++) {
            var item = $items[i];
            var $item = $j(item);

            var isExcludeTarget = (depth != 0 && item.getAttribute('data-exclude-json-data') === 'true');
            if (!isExcludeTarget) {
              var values = [];
              for (var j = 0; j < fields.length; j++) {
                var field = fields[j];
                if (field.targetFormClassName) {
                  var $fieldset = $item.children('.tree-fieldset');
                  var value = $fieldset.find('.' + field.className).text();
                  values.push('"' + field.appendTargetField.join('.') + '":"' + value + '"');
                }
              }
              values.push('"depth":' + depth);
              jsonItems.push('{' + values.join(',') + '}');
              var structure = item.getAttribute('data-target');
              if (structure && structure.length > 0) {
                var children = $item.children('.children').children('.tree').children('.item');
                getCatalogJsonA(children, jsonItems, depth + 1);
              }
            }
          }
        }



        /*------------------------------------------------------------*/
        //
        //  品目複数選択画面    品目検索 カタログ検索 SECTION B
        //
        /*------------------------------------------------------------*/

        function initDetailProductBItemManage($targetNode) {

          $j('#productAItemSearch').addClass("hidden");
          $j('#productBItemSearch').removeClass("hidden");
          $j('#productG1ItemSearch').addClass("hidden");
          $j('#productG2ItemSearch').addClass("hidden");
          $j('#catalogAItemSearch').addClass("hidden");
          $j('#catalogGItemSearch').addClass("hidden");
          tabSelection($j('#productBItemSearch'));
          detailProductBItemManage.setTargetNode($targetNode);
        }

        var detailProductBItemManage = new PagerHelper();
        detailProductBItemManage.setPageSize(13);
        detailProductBItemManage.setConfig(productBConfig);

        function productBItemSearchJS() {
          var conditions = queryCondition($j('#detailProductBItemSearchArea'));
          conditions['sectionItem'] = 'B';
          detailProductBItemsQuery(conditions);
        }
        function detailProductBItemsQuery(conditions) {
          $j('#detailProductItemView .modal-content').addClass('ajax-loading');

          JEOLAsia_SvcReportCtrl.getProductMaster(conditions, function (result) {
            if (result) {
              var manage = detailProductBItemManage;
              manage.setRecords(result);
              var $modal = $j('#detailProductItemView');
              var $items = render(manage.getRecords(), $modal.find('#productBItemTabPanel .item-list'), manage.getConfig());
              $items.draggable(draggableOption);
              var errorText = '';
              if (manage.size() >= 10000) {
                errorText = 'The search returned too many rows. Only the 10,000 first datas will be displayed.';
                showAlert(errorText);
              }
              pagerInfo(detailProductBItemManage, $j('#productBItemTabPanel'));
              if ($modal.find('#productBItemTabPanel .auto-close-check').prop('checked')) {
                $j('#detailProductBItemSearchArea').collapse('hide');
              }
            } else {
              showAlert('An unexpected error happened.');
            }
            $j('#detailProductItemView .modal-content').removeClass('ajax-loading');
          });
        }
        function nextRecordsAddDraggableB() {
          var $modal = $j('#detailProductItemView');
          var $items = render(detailProductBItemManage.next(), $modal.find('#productBItemTabPanel .item-list'), detailProductBItemManage.getConfig());
          $items.draggable(draggableOption);
          pagerInfo(detailProductBItemManage, $j('#productBItemTabPanel'));
        }
        function prevRecordsAddDraggableB() {
          var $modal = $j('#detailProductItemView');
          var $items = render(detailProductBItemManage.prev(), $modal.find('#productBItemTabPanel .item-list'), detailProductBItemManage.getConfig());
          $items.draggable(draggableOption);
          pagerInfo(detailProductBItemManage, $j('#productBItemTabPanel'));
        }

        function chooseItemDetailProductB() {
          var items = [];
          var config = detailProductBItemManage.getConfig();
          var fields = config.fields;
          var $modal = $j('#detailProductItemView');
          var $selectedItems = $modal.find('#productBItemTabPanel .item.selected');
          console.log('★★★：' + JSON.stringify($selectedItems));
          if ($selectedItems.length) {
            for (var i = 0; i < $selectedItems.length; i++) {
              var $selectedItem = $j($selectedItems[i]);
              var values = [];
              for (var j = 0; j < fields.length; j++) {
                var field = fields[j];
                if (field.targetFormClassName) {
                  var value = $selectedItem.find('.' + field.className).text();
                  values.push('"' + field.sobjectField.join('.') + '":"' + value + '"');
                }
              }
              items.push('{' + values.join(',') + '}');
            }
            var $targetNode = detailProductBItemManage.getTargetNode();
            // var targetSortNo = $targetNode[0].getAttribute('data-sortNo');
            var targetSortNo;
            var jsonText = '{' +
              '"sortNo":"' + targetSortNo + '",' +
              '"items":[' + items.join(',') + ']' +
              '}';
            createSelectedProductBItemDetails(jsonText);
            $modal.modal('hide');
          } else {
            showAlert('Please select the items to add.');
          }
        }



        /*------------------------------------------------------------*/
        //
        //  品目複数選択画面    品目検索 カタログ検索 SECTION G
        //
        /*------------------------------------------------------------*/

        function initDetailProductGItemManage($targetNode) {

          $j('#productAItemSearch').addClass("hidden");
          $j('#productBItemSearch').addClass("hidden");
          $j('#productG1ItemSearch').removeClass("hidden");
          $j('#productG2ItemSearch').removeClass("hidden");

          $j('#catalogAItemSearch').addClass("hidden");

          if ($j("select[name*=':quotationType']").find("option:selected").text() == $j("input[name*=':quotation-unit-label']").val()) {
            $j('#catalogGItemSearch').removeClass("hidden");
          } else {
            $j('#catalogGItemSearch').addClass("hidden");
          }


          tabSelection($j('#productG1ItemSearch'));

          detailProductG1ItemManage.setTargetNode($targetNode);
          detailProductG2ItemManage.setTargetNode($targetNode);
          detailProductGCatalogManage.setTargetNode($targetNode);

        }

        var detailProductG1ItemManage = new PagerHelper();
        var detailProductG2ItemManage = new PagerHelper();
        detailProductG1ItemManage.setPageSize(13);
        detailProductG2ItemManage.setPageSize(13);
        detailProductG1ItemManage.setConfig(productG1Config);
        detailProductG2ItemManage.setConfig(productG2Config);

        function productG1ItemSearchJS() {
          var conditions = queryCondition($j('#detailProductG1ItemSearchArea'));
          conditions['sectionItem'] = 'G1';
          detailProductG1ItemsQuery(conditions);
        }
        function productG2ItemSearchJS() {
          var conditions = queryCondition($j('#detailProductG2ItemSearchArea'));
          conditions['sectionItem'] = 'G2';
          detailProductG2ItemsQuery(conditions);
        }
        function detailProductG1ItemsQuery(conditions) {
          $j('#detailProductItemView .modal-content').addClass('ajax-loading');

          var quotationType = $j("select[name*=':quotationType']").val();

          JEOLAsia_SvcReportCtrl.getProductMaster(conditions, '', quotationType, function (result) {
            if (result) {
              var manage = detailProductG1ItemManage;
              manage.setRecords(result);
              var $modal = $j('#detailProductItemView');
              var $items = render(manage.getRecords(), $modal.find('#productG1ItemTabPanel .item-list'), manage.getConfig());
              $items.draggable(draggableOption);
              var errorText = '';
              if (manage.size() >= 10000) {
                errorText = 'The search returned too many rows. Only the 10,000 first datas will be displayed.';
                showAlert(errorText);
              }
              pagerInfo(detailProductG1ItemManage, $j('#productG1ItemTabPanel'));
              if ($modal.find('#productG1ItemTabPanel .auto-close-check').prop('checked')) {
                $j('#detailProductG1ItemSearchArea').collapse('hide');
              }
            } else {
              showAlert('情報を取得できませんでした。再度検索してみてください。');
            }
            $j('#detailProductItemView .modal-content').removeClass('ajax-loading');
          });
        }
        function detailProductG2ItemsQuery(conditions) {
          $j('#detailProductItemView .modal-content').addClass('ajax-loading');

          var quotationType = $j("select[name*=':quotationType']").val();

          JEOLAsia_SvcReportCtrl.getProductMaster(conditions, '', quotationType, function (result) {
            if (result) {
              var manage = detailProductG2ItemManage;
              manage.setRecords(result);
              var $modal = $j('#detailProductItemView');
              var $items = render(manage.getRecords(), $modal.find('#productG2ItemTabPanel .item-list'), manage.getConfig());
              $items.draggable(draggableOption);
              var errorText = '';
              if (manage.size() >= 10000) {
                errorText = 'The search returned too many rows. Only the 10,000 first datas will be displayed.';
                showAlert(errorText);
              }
              pagerInfo(detailProductG2ItemManage, $j('#productG2ItemTabPanel'));
              if ($modal.find('#productG2ItemTabPanel .auto-close-check').prop('checked')) {
                $j('#detailProductG2ItemSearchArea').collapse('hide');
              }
            } else {
              showAlert('情報を取得できませんでした。再度検索してみてください。');
            }
            $j('#detailProductItemView .modal-content').removeClass('ajax-loading');
          });
        }
        function nextRecordsAddDraggableG1() {
          var $modal = $j('#detailProductItemView');
          var $items = render(detailProductG1ItemManage.next(), $modal.find('#productG1ItemTabPanel .item-list'), detailProductG1ItemManage.getConfig());
          $items.draggable(draggableOption);
          pagerInfo(detailProductG1ItemManage, $j('#productG1ItemTabPanel'));
        }
        function nextRecordsAddDraggableG2() {
          var $modal = $j('#detailProductItemView');
          var $items = render(detailProductG2ItemManage.next(), $modal.find('#productG2ItemTabPanel .item-list'), detailProductG2ItemManage.getConfig());
          $items.draggable(draggableOption);
          pagerInfo(detailProductG2ItemManage, $j('#productG2ItemTabPanel'));
        }
        function prevRecordsAddDraggableG1() {
          var $modal = $j('#detailProductItemView');
          var $items = render(detailProductG1ItemManage.prev(), $modal.find('#productG1ItemTabPanel .item-list'), detailProductG1ItemManage.getConfig());
          $items.draggable(draggableOption);
          pagerInfo(detailProductG1ItemManage, $j('#productG1ItemTabPanel'));
        }
        function prevRecordsAddDraggableG2() {
          var $modal = $j('#detailProductItemView');
          var $items = render(detailProductG2ItemManage.prev(), $modal.find('#productG2ItemTabPanel .item-list'), detailProductG2ItemManage.getConfig());
          $items.draggable(draggableOption);
          pagerInfo(detailProductG2ItemManage, $j('#productG2ItemTabPanel'));
        }

        function chooseItemDetailProductG1() {
          var items = [];
          var config = detailProductG1ItemManage.getConfig();
          var fields = config.fields;
          var $modal = $j('#detailProductItemView');
          var $selectedItems = $modal.find('#productG1ItemTabPanel .item.selected');
          if ($selectedItems.length) {
            for (var i = 0; i < $selectedItems.length; i++) {
              var $selectedItem = $j($selectedItems[i]);
              var values = [];
              for (var j = 0; j < fields.length; j++) {
                var field = fields[j];
                if (field.targetFormClassName) {
                  var value = $selectedItem.find('.' + field.className).text();
                  values.push('"' + field.sobjectField.join('.') + '":"' + value + '"');
                }
              }
              items.push('{' + values.join(',') + '}');
            }
            var $targetNode = detailProductG1ItemManage.getTargetNode();
            var targetSortNo = $targetNode[0].getAttribute('data-sortNo');
            var jsonText = '{' +
              '"sortNo":"' + targetSortNo + '",' +
              '"JProd":"1",' +
              '"items":[' + items.join(',') + ']' +
              '}';

            createSelectedProductGItemDetails(jsonText);

            $modal.modal('hide');
          } else {
            showAlert('Please select the items to add.');
          }
        }


        function chooseItemDetailProductG2() {
          var items = [];
          var config = detailProductG2ItemManage.getConfig();
          var fields = config.fields;
          var $modal = $j('#detailProductItemView');
          var $selectedItems = $modal.find('#productG2ItemTabPanel .item.selected');
          if ($selectedItems.length) {
            for (var i = 0; i < $selectedItems.length; i++) {
              var $selectedItem = $j($selectedItems[i]);
              var values = [];
              for (var j = 0; j < fields.length; j++) {
                var field = fields[j];
                if (field.targetFormClassName) {
                  var value = $selectedItem.find('.' + field.className).text();
                  values.push('"' + field.sobjectField.join('.') + '":"' + value + '"');
                }
              }
              items.push('{' + values.join(',') + '}');
            }
            var $targetNode = detailProductG2ItemManage.getTargetNode();
            var targetSortNo = $targetNode[0].getAttribute('data-sortNo');
            var jsonText = '{' +
              '"sortNo":"' + targetSortNo + '",' +
              '"JProd":"2",' +
              '"items":[' + items.join(',') + ']' +
              '}';

            createSelectedProductGItemDetails(jsonText);

            $modal.modal('hide');
          } else {
            showAlert('Please select the items to add.');
          }
        }



        var detailProductGCatalogManage = new PagerHelper();
        detailProductGCatalogManage.setPageSize(10000);
        detailProductGCatalogManage.setConfig(catalogGConfig);

        function productGCatalogSearch() {
          var conditions = queryCondition($j('#detailProductGCatalogSearchArea'));
          detailProductGCatalogQuery(conditions);
        }

        function detailProductGCatalogQuery(conditions) {
          $j('#detailProductItemView .modal-content').addClass('ajax-loading');
          JEOLAsia_SvcReportCtrl.getCatalogHead(conditions, function (result) {
            if (result) {
              var manage = detailProductGCatalogManage;
              manage.setRecords(result);
              var $modal = $j('#detailProductItemView');
              var $items = catalogRenderG(manage.getRecords(), $modal.find('#productGCatalogTabPanel .item-list'), manage.getConfig(), { "click": getChildCatalogStructureG }, true);
              $items.draggable(draggableOption);
              var errorText = '';
              if (manage.size() >= 10000) {
                errorText = '検索結果が多いため10000件まで表示します。';
                showAlert(errorText);
              }
              //pagerInfo(detailProductGCatalogManage, $j('#productGCatalogTabPanel'));
              if ($modal.find('#productGCatalogTabPanel .auto-close-check').prop('checked')) {
                $j('#detailProductGCatalogSearchArea').collapse('hide');
              }
            } else {
              showAlert('情報を取得できませんでした。再度検索してみてください。');
            }
            $j('#detailProductItemView .modal-content').removeClass('ajax-loading');
          });
        }

        function getChildCatalogStructureG(e) {
          var $target = $j(e.target);
          var $parentItem = $target.closest('.item');
          if (!$parentItem.hasClass('got-items')) {
            $j('#detailProductItemView .modal-content').addClass('ajax-loading');
            JEOLAsia_SvcReportCtrl.getChildCatalogStructure($parentItem[0].getAttribute('data-catalog'), $parentItem[0].getAttribute('data-target'), $parentItem[0].getAttribute('data-position'), function (result, event) {
              childCatalogStructureCallBackG(result, event, $parentItem);
              $j('#detailProductItemView .modal-content').removeClass('ajax-loading');
            });
          }
          $parentItem.toggleClass('open');
          e.preventDefault();
          return false;
        }
        function childCatalogStructureCallBackG(result, event, $parentItem) {
          var ret = null;
          if (event.status) {
            var $childWrapper = $j(divNode.cloneNode());
            $childWrapper.addClass('children');
            $parentItem.append($childWrapper);
            var manage = detailProductGCatalogManage;
            manage.setRecords(result);
            var $modal = $j('#detailProductItemView');
            var $items = catalogRenderG(manage.getRecords(), $childWrapper, manage.getConfig(), { "click": getChildCatalogStructureG });
            if (!$parentItem.hasClass('non-select-drag')) {
              $items.draggable(draggableOption);
            } else {
              $items.addClass('selected non-select-drag');
              $items.draggable(selectedDraggableOption);
            }
            var errorText = '';
            if (manage.size() >= 10000) {
              errorText = '検索結果が多いため10000件まで表示します。';
              showAlert(errorText);
            }
            ret = $items;
          } else {
            showAlert('情報を取得できませんでした。再度検索してみてください。');
          }
          $parentItem.addClass('got-items');
          return ret;
        }
        function catalogRenderG(records, renderTarget, renderConfigure, eventFunction, isRoot) {
          var records = records;
          var body = renderTarget;
          body.empty();
          var $tree = $j(divNode.cloneNode());
          $tree.addClass('tree');
          var config = renderConfigure;
          var fieldSettings = config.fields;
          for (var i = 0; i < records.length; i++) {
            var currentTarget = records[i];
            var $item = $j(divNode.cloneNode());
            $item.addClass('item');

            var $view = $j(divNode.cloneNode());
            $view.addClass('tree-view');
            $item.append($view);
            var $fieldSet = $j(divNode.cloneNode());
            $fieldSet.addClass('tree-fieldset');
            $item.append($fieldSet);
            if (fieldSettings) {
              createCatalogItemDetailG(currentTarget, $view, $fieldSet, fieldSettings);
              if ((currentTarget.Position__c === 1 && isRoot) || currentTarget.ClassificationType__c == 1) {
                for (key in eventFunction) {
                  $view.on(key, eventFunction[key]);
                }
                var structure = null;
                if (currentTarget.Position__c === 1) {
                  structure = currentTarget.CatalogStructure__c;
                } else {
                  structure = currentTarget.ClassificationNo__c;
                }
                $item[0].setAttribute('data-target', structure);
                $item[0].setAttribute('data-catalog', currentTarget.ProductCatalog__c);
              }
              if (currentTarget.Position__c === 1 && !isRoot) {
                // < !--$item[0].setAttribute('data-exclude-json-data', true); -->
              }
              var targetPosition = currentTarget.Position__c;
              $item[0].setAttribute('data-position', targetPosition);
              if (currentTarget.EnglishText__c) {
                $item[0].setAttribute('title', currentTarget.EnglishText__c);
              } else {
                $item[0].setAttribute('title', '');
              }

              $item[0].className += " showTooltipEnglishText";
              $tree.append($item);
            }
          }
          body.append($tree);
          return body.find('.item');
        }
        function createCatalogItemDetailG(target, $view, $fieldSet, fieldSettings) {
          var viewTexts = [];
          for (var i = 0; i < fieldSettings.length; i++) {
            var fieldConfigure = fieldSettings[i];
            if (fieldConfigure.sobjectField) {
              var fieldValue = getFieldValue(target, fieldConfigure.sobjectField);
              if (fieldConfigure.resultFunc && typeof fieldConfigure.resultFunc === "function") {
                fieldValue = fieldConfigure.resultFunc(fieldValue);
              }
              if (!fieldConfigure.hidden && fieldValue.length > 0) {
                viewTexts.push(fieldValue);
              }
              var $field = createField(fieldValue, fieldConfigure.className);
              $fieldSet.append($field);
              /*if (fieldConfigure.hidden) {
                  $field.css({display: 'none'});
              }*/
            }
          }
          $view.text(viewTexts.join(' '));
        }

        var asyncGetStructrueQueue = null;
        var fAlreadySent = true;
        // < !--Used to send it only once.If not, when the main folder has been opened, but not the child folders, the content of the child folder is added twice(reason unknown)(By Polus on 2015 / 06 / 16)-- >

        function chooseCatalogDetailProductG() {
          var items = [];
          asyncGetStructrueQueue = {};
          fAlreadySent = false;
          var config = detailProductGCatalogManage.getConfig();
          var fields = config.fields;
          var $modal = $j('#detailProductItemView');
          var $selectedItems = $modal.find('#productGCatalogTabPanel .item.selected');
          if ($selectedItems.length) {
            $j('#detailProductItemView .modal-content').addClass('ajax-loading');
            getAllStructureG($selectedItems);
          } else {
            showAlert('Please select the items to add.');
          }
        }
        function getAllStructureG($targets) {
          if ($targets.length) {
            for (var i = 0; i < $targets.length; i++) {
              var item = $targets[i];
              var $item = $j(item);
              var targetCatalog = item.getAttribute('data-catalog');
              var targetStructure = item.getAttribute('data-target');
              var targetPosition = item.getAttribute('data-position');
              if ($item.hasClass('got-items') && targetStructure && targetStructure.length) {
                // < !--The folder has been opened-- >
                asyncGetStructrueQueue[targetStructure] = item;
                getAllStructureG($item.find('.children>.tree>.item'));
                delete asyncGetStructrueQueue[targetStructure];
              } else if (targetStructure && targetStructure.length) {
                // < !--The folder has not been opened, all childs should be added-- >
                asyncGetStructrueQueue[targetStructure] = item;
                getCatalogStructureCallG($item, targetCatalog, targetStructure, targetPosition);
              }
            }
          }
          var queueLen = 0;
          for (key in asyncGetStructrueQueue) {
            queueLen++;
          }
          if (queueLen <= 0 && !fAlreadySent) {
            fAlreadySent = true;
            createImportCatalogJsonG();
          }
        }
        function getCatalogStructureCallG($item, targetCatalog, targetStructure, targetPosition) {
          JEOLAsia_SvcReportCtrl.getChildCatalogStructure(targetCatalog, targetStructure, targetPosition, function (result, event) {
            var $items = childCatalogStructureCallBackG(result, event, $item);
            delete asyncGetStructrueQueue[targetStructure];
            if ($items) {
              getAllStructureG($items);
            }
          });
        }
        function createImportCatalogJsonG() {
          var $items = $j('#detailProductItemView #productGCatalogTabPanel #selected-list-catalog-G>.tree>.item');
          var jsonItems = [];
          getCatalogJsonG($items, jsonItems, 0);
          var $targetNode = detailProductGCatalogManage.getTargetNode();
          var targetSortNo = $targetNode[0].getAttribute('data-sortNo');
          var jsonText = '{' +
            '"sortNo":"' + targetSortNo + '",' +
            '"items":[' + jsonItems.join(',') + ']' +
            '}';
          var parsedJson = JSON.parse(jsonText);

          createSelectedProductGItemDetails(jsonText);
          $j('#detailProductItemView .modal-content').removeClass('ajax-loading');
          $j('#detailProductItemView').modal('hide');
        }

        function getCatalogJsonG($items, jsonItems, depth) {

          var config = detailProductGCatalogManage.getConfig();
          var fields = config.fields;
          for (var i = 0; i < $items.length; i++) {
            var item = $items[i];
            var $item = $j(item);

            var isExcludeTarget = (depth != 0 && item.getAttribute('data-exclude-json-data') === 'true');
            if (!isExcludeTarget) {
              var values = [];
              for (var j = 0; j < fields.length; j++) {
                var field = fields[j];
                if (field.targetFormClassName) {
                  var $fieldset = $item.children('.tree-fieldset');
                  var value = $fieldset.find('.' + field.className).text();
                  values.push('"' + field.appendTargetField.join('.') + '":"' + value + '"');
                }
              }
              values.push('"depth":' + depth);
              jsonItems.push('{' + values.join(',') + '}');
              var structure = item.getAttribute('data-target');
              if (structure && structure.length > 0) {
                var children = $item.children('.children').children('.tree').children('.item');
                getCatalogJsonG(children, jsonItems, depth + 1);
              }
            }
          }
        }











        function queryCondition($targetNode) {
          var $searchFields = $targetNode.find('input.field-value[data-field]');
          var conditions = {};
          for (var i = 0; i < $searchFields.length; i++) {
            var field = $searchFields[i];
            var fieldName = field.getAttribute('data-field');
            var fieldValue = field.value;
            if (fieldName && fieldName.length != 0) {
              conditions[fieldName] = fieldValue;
              // alert('fieldName: ' + fieldName + ' | fieldValue: ' + fieldValue); //todobp
            }
          }
          return conditions;
        }

        var draggableOption = {
          helper: 'clone',
          opacity: 0.7,
          zIndex: 102,
          scroll: false,
          start: function (e, ui) {
            ui.helper.addClass('item-drag');
          }
        };
        var selectedDraggableOption = {
          helper: 'clone',
          opacity: 0.7,
          zIndex: 102,
          cursorAt: { left: 5, top: 5 },
          start: function (e, ui) {
            ui.helper.addClass('item-drag');
            $j(ui.helper.context).css({ 'background-color': '#eee' });
          },
          stop: function (e, ui) {
            var $draggable = $j(ui.helper.context);
            if ($draggable.hasClass('remove-target') && $draggable.hasClass('selected')) {
              $draggable.remove();
            } else {
              $draggable.css({ 'background-color': '' });
            }
          }
        }
        var droppableOption = {
          greedy: true,
          accept: '.item',
          tolerance: 'intersect',
          activeClass: 'drop-active',
          hoverClass: 'drop-hover',
          drop: function (e, ui) {
            if (!ui.draggable.hasClass('selected')) {
              $selectedItem = ui.draggable.removeAttr('style').clone();
              $selectedItem.addClass('selected');
              $selectedItem.draggable(selectedDraggableOption);
              $j(e.target).find('.drop-target').append($selectedItem);
            }
          },
          out: function (e, ui) {
            if (ui.draggable.hasClass('selected')) {
              ui.draggable.addClass('remove-target');
            }
          },
          over: function (e, ui) {
            if (ui.draggable.hasClass('selected')) {
              ui.draggable.removeClass('remove-target');
            }
          }
        };
        var droppableOption_catalogA = {
          greedy: true,
          accept: '.item',
          tolerance: 'intersect',
          activeClass: 'drop-active',
          hoverClass: 'drop-hover',
          drop: function (e, ui) {
            if (!ui.draggable.hasClass('selected')) {
              var $selectedItem = ui.draggable.removeAttr('style').clone();
              $selectedItem.find('.item').addClass('selected non-select-drag');
              $selectedItem.addClass('selected non-select-drag');
              $selectedItem.draggable(selectedDraggableOption);
              $selectedItem.find('.item').draggable(selectedDraggableOption);
              var items = $selectedItem.find('.item[data-target] > .tree-view');
              items.on('click', getChildCatalogStructureA);
              var structrue = $selectedItem[0].getAttribute('data-target');
              if (structrue && structrue.length > 0) {
                $selectedItem.children('.tree-view').on('click', getChildCatalogStructureA);
              }
              $j(e.target).find('.drop-target').append($selectedItem);
            }
          },
          out: function (e, ui) {
            if (ui.draggable.hasClass('selected')) {
              ui.draggable.addClass('remove-target');
            }
          },
          over: function (e, ui) {
            if (ui.draggable.hasClass('selected')) {
              ui.draggable.removeClass('remove-target');
            }
          }
        };
        var droppableOption_catalogG = {
          greedy: true,
          accept: '.item',
          tolerance: 'intersect',
          activeClass: 'drop-active',
          hoverClass: 'drop-hover',
          drop: function (e, ui) {
            if (!ui.draggable.hasClass('selected')) {
              var $selectedItem = ui.draggable.removeAttr('style').clone();
              $selectedItem.find('.item').addClass('selected non-select-drag');
              $selectedItem.addClass('selected non-select-drag');
              $selectedItem.draggable(selectedDraggableOption);
              $selectedItem.find('.item').draggable(selectedDraggableOption);
              var items = $selectedItem.find('.item[data-target] > .tree-view');
              items.on('click', getChildCatalogStructureG);
              var structrue = $selectedItem[0].getAttribute('data-target');
              if (structrue && structrue.length > 0) {
                $selectedItem.children('.tree-view').on('click', getChildCatalogStructureG);
              }
              $j(e.target).find('.drop-target').append($selectedItem);
            }
          },
          out: function (e, ui) {
            if (ui.draggable.hasClass('selected')) {
              ui.draggable.addClass('remove-target');
            }
          },
          over: function (e, ui) {
            if (ui.draggable.hasClass('selected')) {
              ui.draggable.removeClass('remove-target');
            }
          }
        };


        var alertAnime = null;
        function showAlert(target) {
          var alert = document.getElementById('alert');
          if (alertAnime) {
            clearTimeout(alertAnime);
            alert.style.top = '0px';
            alert.style.opacity = '0';
            alert.style.transition = 'none';
          }
          if (target instanceof $j) {
            $j(alert).find('.description').append(target);
          } else if (target instanceof $j || typeof target === 'string') {
            $j(alert).find('.description').text(target);
          }
          alert.style.display = 'block';
          alertAnime = setTimeout(function () {
            alert.style.top = '20px';
            alert.style.opacity = '1';
            alert.style.transition = '';
          }, 100);
          alertAnime = setTimeout(hideAleart, 3200);
        }
        function hideAleart() {
          var alert = document.getElementById('alert');
          alert.style.top = '';
          alert.style.opacity = '';
          alertAnime = setTimeout(function () {
            alert.style.display = '';
            alertAnime = null;
            $j(alert).find('.description').empty();
          }, 500);
        }
        function changeTaxAmountOutput(node) {
          var $target = $j(node);
          var value = $target.prop('checked');
          if (value) {
            $j('.includeTaxOutput').prop('checked', false);
          } else {
            $j('.includeTaxOutput').prop('checked', true);
          }
        }
        var errorAreaId = '#{!$Component.form.apexMessage}';
        function getErrorArea() {
          return $j(errorAreaId.replace(/(:)/ig, '\\\$1'));
        }
        function showResult(text) {
          var $error = getErrorArea();
          var $children = $error.children();
          if ($children.length > 0) {
            $children = $children.clone();
            $children.css({ 'text-align': 'left' });
            showAlert($children);
          } else {
            showAlert(text);
          }
        }

        function transformInputTextBranchNo(text) {
          var ret = '';
          if (text || text === 0) {
            ret = text.replace(/[０-９]/ig, function (s) {
              return String.fromCharCode(s.charCodeAt(0) - 65248);
            })
            ret = ret.match(/^[0-9]*/ig)[0];
          }
          if (ret.length < 2) {
            for (var i = ret.length; i < 2; i++) {
              ret = '0' + ret;
            }
          }
          return ret;
        }
        function transformSafeInputText(text) {
          var ret = '';
          if (text) {
            ret = text.replace(/[０-９ａ-ｚＡ-Ｚ]/g, function (s) {
              return String.fromCharCode(s.charCodeAt(0) - 65248);
            })
            ret = ret.toUpperCase().match(/^[0-9A-Z]*/g)[0];
          }
          return ret;
        }
        function transformInputText(text) {
          var ret = '';
          if (text) {
            ret = text.replace(/[０-９ａ-ｚＡ-Ｚ]/g, function (s) {
              return String.fromCharCode(s.charCodeAt(0) - 65248);
            })
            ret = ret.toUpperCase();
          }
          return ret;
        }
        function tabSelection(self) {
          var $self = $j(self);
          if (!$self.hasClass('active')) {
            var $modal = $j('#detailProductItemView');
            var tabs = $modal.find('.tab');
            tabs.removeClass('active');
            var targetTabName = $self.attr('data-target');
            $modal[0].setAttribute('data-tab-target', targetTabName);
            $self.addClass('active');
          }
          $j('#detailProductItemView').css({ 'display': 'block' });
        }

        var openModalDetailId = null;
        function setOpenModalDetailId(target) {
          var $detail = $j(target).closest('.quotation-detail-item');
          openModalDetailId = $detail.attr('id');
        }
        function focusOpenModalDetail() {
          var $detail = $j(document.getElementById(openModalDetailId));
          var $targetButton = $detail.find('.productSelectButton');
          openModalDetailId = null;
          $targetButton.trigger('focus');
        }

        function safetyLockCheck(targetNode) {
          var value = targetNode.getAttribute('data-compare-value');
          var type = targetNode.getAttribute('type');
          var currentValue = null;
          if (type === 'checkbox' || type === 'radio') {
            currentValue = targetNode.checked;
          } else {
            currentValue = targetNode.value;
          }
          if (value !== currentValue) {
            lockSafety();
          }
        }
        function unlockSafety() {
          safety = false;
        }
        function lockSafety() {
          safety = true;
        }
        var lasttarget;
        function detailBodyFocus(target) {
          lasttarget = target;
          $j(target).parent().css('left', '0px');
        }
        function detailBodyBlur(target) {
          $j(target).parent().css('left', '');
          $j(target).css({ height: '31px' });
        }
        function openSearchToggleButton(target) {
          $j('.field.toggle').removeClass('toggle');
          $j(target).closest('.field').addClass('toggle');
        }
        /**
         * detect IE
         * returns version of IE or false, if browser is not Internet Explorer
         */
        function detectIE() {
          var ua = window.navigator.userAgent;

          var msie = ua.indexOf('MSIE ');
          if (msie > 0) {
            // IE 10 or older => return version number
            return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);
          }

          var trident = ua.indexOf('Trident/');
          if (trident > 0) {
            // IE 11 => return version number
            var rv = ua.indexOf('rv:');
            return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);
          }

          var edge = ua.indexOf('Edge/');
          if (edge > 0) {
            // IE 12 => return version number
            return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);
          }

          // other browser
          return false;
        }

        function ignoreEnterKey(e) {
          if ((window.event && window.event.keyCode == 13) || e.which == 13) {
            return false;
          } else {
            return true;
          };
        }

        function disableEnterKey(e) {
          var key;
          if (window.event)
            key = window.event.keyCode; //IE
          else
            key = e.which; //firefox
          return (key != 13);
        }

      </script>

    </head>

    <body>
      <apex:actionStatus layout="block" onstop="contentInit();" id="ajaxPageStatus" startStyleClass="ajax-status-start-page">
        <apex:facet name="start">
          <div class="ajax-status-start-inner ajax-loading"></div>
        </apex:facet>
      </apex:actionStatus>
      <apex:outputPanel layout="block" styleClass="contents" id="contents">
        <div class="page-header">
          <apex:include pageName="{!$Page.JEOL_VisualforceHeader}" />
        </div>
        <div class="contents-body">
          <apex:form id="form">
            <apex:inputHidden value="{!quotationRecordtypeLabelUnit}" id="quotation-unit-label" />
            <apex:inputHidden value="{!dateQT}" id="quotation-dateQT" />
            <apex:inputText id="fieldScrollValue" styleclass="hidden" value="{!currentScrollValue}" />
            <div class="section navi-area">
              <div class="section-body base-width clearfix">
                <ul class="navi-buttons clearfix">
                  <li class="navi-item">
                    <apex:commandLink action="{!saveAction}" rendered="{!isValid}" styleClass="customButton save" onclick="unlockSafety();" status="ajaxPageStatus">{!$Label.JEOLAsia_QuotEdit_Label_Save}</apex:commandLink>
                  </li>
                </ul>
                <ul class="navi-buttons clearfix">
                  <apex:outputPanel layout="none" id="buttonsBar" style="margin-left: 100px;">
                    <!-- LIST OF BUTTONS -->
                  </apex:outputPanel>
                </ul>
              </div>
            </div>
            <apex:outputPanel layout="none" id="listview" rendered="{!isValid}">

              <apex:actionFunction name="createSelectedProductAItemDetails" action="{!qdm.createSelectedProductItemDetailsA}" rerender="detailAreaA, detailAreaB, detailAreaC, detailAreaD, detailAreaE, detailAreaF, detailAreaG, modalListView, modalListViewDel, apexMessage"
                status="ajaxStatusA">
                <apex:param value="" name="jsonText" assignTo="{!qdm.createdItemInfos}" />
              </apex:actionFunction>

              <apex:actionFunction name="createSelectedProductBItemDetails" action="{!qdm.createSelectedProductItemDetailsB}" rerender="detailAreaA, detailAreaB, detailAreaC, detailAreaD, detailAreaE, detailAreaF, detailAreaG, modalListView, modalListViewDel, apexMessage"
                status="ajaxStatusB">
                <apex:param value="" name="jsonText" assignTo="{!qdm.createdItemInfos}" />
              </apex:actionFunction>

              <apex:actionFunction name="createSelectedProductGItemDetails" action="{!qdm.createSelectedProductItemDetailsG}" rerender="detailAreaA, detailAreaB, detailAreaC, detailAreaD, detailAreaE, detailAreaF, detailAreaG, modalListView, modalListViewDel, apexMessage"
                status="ajaxStatusG">
                <apex:param value="" name="jsonText" assignTo="{!qdm.createdItemInfos}" />
              </apex:actionFunction>

              <div class="section base-width error-area">
                <apex:pageMessages id="apexMessage" />
              </div>
              <div class="section quotation-area base-width">
                <div class="section-header">
                </div>
                <div class="section-body">
                  <div class="quotation-information clearfix">
                    <div style="float: left;">
                      <!-- QUOTATION INFORMATION -->
                      <div class="quotation-item basic-information-area-title">
                        <div class="quotation-item-header clearfix">
                          <div class="header-title">SVC Informations</div>
                        </div>
                      </div>
                      <!-- SVC Informations Left Column -->
                      <div class="quotation-item basic-information-area">
                        <div class="quotation-item-body clearfix">
                          <div style="min-height: 273px;">
                            <!-- SVC Number -->
                            <div class="field">
                              <label class="field-label">SVC Number</label>
                              <div class="field-value output">
                                <apex:outputField value="{!qdm.parentRec.Name}" />
                              </div>
                            </div>

                            <div class="field ajaxRequestStatus">
                              <apex:actionStatus layout="block" id="ajaxQuotationTypeField" onstop="$j('.quotationType').trigger('focus');">
                                <apex:facet name="start">
                                  <div class="ajaxStatusView">{!$Label.JEOL_QuotEdit_Label_Searching}</div>
                                </apex:facet>
                              </apex:actionStatus>
                            </div>

                            <!-- PROJECT NUMBER -->
                            <div class="field" style="min-width: 400px;">
                              <apex:outputLabel value="Project Number" for="projectNumber" styleClass="field-label" />
                              <apex:inputField id="projectNumber" rendered="{!!isReadOnly}" styleClass="field-value" value="{!qdm.parentRec.ProjectNumber__c}"
                                html-data-compare-value="{!qdm.baseParentRec.ProjectNumber__c}" onblur="safetyLockCheck(this);"
                                style="width: 347px;" onkeypress="return disableEnterKey(event)" />
                              <apex:outputField rendered="{!isReadOnly}" styleClass="field-value output" value="{!qdm.parentRec.ProjectNumber__c}" />
                            </div>

                            <!-- Date -->
                            <div class="field hideDateDefault" style="min-width: 400px;">
                              <label class="field-label">Date</label>
                              <apex:inputField id="svcReportDate" styleClass="field-value contractStartDate" value="{!qdm.parentRec.RegisterDate__c}" html-data-compare-value="{!qdm.baseParentRec.RegisterDate__c}"
                                onblur="safetyLockCheck(this);" style="width: 100px;" onkeypress="return disableEnterKey(event)"
                              />
                            </div>

                            <!-- Customer Code -->
                            <div class="field" style="min-width: 400px;">
                              <label class="field-label">Customer Code</label>
                              <apex:inputField id="customerCode" rendered="{!!isReadOnly}" styleClass="field-value" value="{!qdm.parentRec.CustomerCode__c}"
                                html-data-compare-value="{!qdm.baseParentRec.CustomerCode__c}" onblur="safetyLockCheck(this);"
                                style="width: 347px;" onkeypress="return disableEnterKey(event)" />
                            </div>

                            <!-- Customer Name -->
                            <div class="field" style="min-width: 400px;">
                              <label class="field-label">Customer Name</label>
                              <div class="field-value output">
                                <apex:outputField value="{!qdm.parentRec.ShipmentName__c}" />
                              </div>
                            </div>

                            <!-- Customer Address -->
                            <div class="field" style="min-width: 400px;">
                              <label class="field-label">Customer Address</label>
                              <div class="field-value output">
                                <apex:outputField value="{!qdm.parentRec.ShipmentAddress__c}" />
                              </div>
                            </div>

                            <!-- User's Name -->
                            <div class="field" style="min-width: 400px;">
                              <label class="field-label">User's Name</label>
                              <apex:inputField id="usersName" rendered="{!!isReadOnly}" styleClass="field-value" value="{!qdm.parentRec.CustomerName__c}"
                                html-data-compare-value="{!qdm.baseParentRec.CustomerName__c}" onblur="safetyLockCheck(this);"
                                style="width: 347px;" onkeypress="return disableEnterKey(event)" />
                            </div>

                            <!-- Tel / email -->
                            <div class="field" style="min-width: 400px;">
                              <label class="field-label">Tel / email</label>
                              <apex:inputField id="telEmail" rendered="{!!isReadOnly}" styleClass="field-value" value="{!qdm.parentRec.CustomerContactInfo__c}"
                                html-data-compare-value="{!qdm.baseParentRec.CustomerContactInfo__c}" onblur="safetyLockCheck(this);"
                                style="width: 347px;" onkeypress="return disableEnterKey(event)" />
                            </div>

                            <!-- MODEL -->
                            <div class="field" style="min-width: 400px;">
                              <label class="field-label">MODEL</label>
                              <apex:inputField id="svcReportModel" rendered="{!!isReadOnly}" styleClass="field-value" value="{!qdm.parentRec.Model__c}"
                                html-data-compare-value="{!qdm.baseParentRec.Model__c}" onblur="safetyLockCheck(this);" style="width: 347px;"
                                onkeypress="return disableEnterKey(event)" />
                            </div>

                            <!-- Service Form -->
                            <div class="field" style="min-width: 400px;height: 160px;">
                              <label class="field-label">Service Form</label>
                              <div style="padding-left:38%; width:100%">
                                <apex:selectCheckboxes layout="pageDirection" value="{!checkedServiceFormValues}" label="{!$ObjectType.SVC_Report__c.Fields['Service_Form__c'].Label}">
                                  <apex:selectOptions value="{!serviceFormList}" />
                                </apex:selectCheckboxes>
                              </div>
                            </div>

                            <!-- Custom PO Number -->
                            <div class="field" style="min-width: 400px;">
                              <label class="field-label">Custom PO Number</label>
                              <apex:inputField id="customPONumber" rendered="{!!isReadOnly}" styleClass="field-value" value="{!qdm.parentRec.CustomerPONumber__c}"
                                html-data-compare-value="{!qdm.baseParentRec.CustomerPONumber__c}" onblur="safetyLockCheck(this);"
                                style="width: 347px;" onkeypress="return disableEnterKey(event)" />
                            </div>
                          </div>
                        </div>
                      </div>

                      <!-- SVC Informations Right Column -->
                      <apex:outputPanel id="organizationInformation" layout="block" styleClass="quotation-item organization-information-area">
                        <div class="quotation-item-body clearfix">
                          <!-- empty -->
                          <div class="field" style="min-width: 400px;">
                            <label class="field-label">&nbsp;</label>
                            <div class="field-value output">
                              <apex:outputText escape="false" value="&nbsp;" />
                            </div>
                          </div>

                          <!-- Status -->
                          <div class="field" style="min-width: 400px;">
                            <apex:outputLabel value="Status" for="status" styleClass="field-label" />
                            <apex:inputField id="status" rendered="{!!isReadOnly}" styleClass="field-value lookup" value="{!qdm.parentRec.Status__c}"
                              html-data-compare-value="{!qdm.baseParentRec.Status__c}" onblur="safetyLockCheck(this);" onkeypress="return disableEnterKey(event)"
                            />
                            <apex:outputField rendered="{!isReadOnly}" styleClass="field-value output" value="{!qdm.parentRec.Status__c}" />
                          </div>

                          <!-- Assistant/Engineer -->
                          <div class="field" style="min-width: 400px;">
                            <apex:outputLabel value="Assistant/Engineer" for="jeolAsiaAssistantEngineer" styleClass="field-label" />
                            <apex:inputField id="jeolAsiaAssistantEngineer" rendered="{!!isReadOnly}" styleClass="field-value lookup" value="{!qdm.parentRec.AssistantEngineer__c}"
                              html-data-compare-value="{!qdm.baseParentRec.AssistantEngineer__c}" onblur="safetyLockCheck(this);"
                              onkeypress="return disableEnterKey(event)" />
                          </div>

                          <!-- empty -->
                          <div class="field" style="min-width: 400px;">
                            <label class="field-label">&nbsp;</label>
                            <div class="field-value output">
                              <apex:outputText escape="false" value="&nbsp;" />
                            </div>
                          </div>

                          <!-- empty -->
                          <div class="field" style="min-width: 400px;">
                            <label class="field-label">&nbsp;</label>
                            <div class="field-value output">
                              <apex:outputText escape="false" value="&nbsp;" />
                            </div>
                          </div>

                          <!-- empty -->
                          <div class="field" style="min-width: 400px;">
                            <label class="field-label">&nbsp;</label>
                            <div class="field-value output">
                              <apex:outputText escape="false" value="&nbsp;" />
                            </div>
                          </div>

                          <!-- empty -->
                          <div class="field" style="min-width: 400px;">
                            <label class="field-label">&nbsp;</label>
                            <div class="field-value output">
                              <apex:outputText escape="false" value="&nbsp;" />
                            </div>
                          </div>

                          <!-- empty -->
                          <div class="field" style="min-width: 400px;">
                            <label class="field-label">&nbsp;</label>
                            <div class="field-value output">
                              <apex:outputText escape="false" value="&nbsp;" />
                            </div>
                          </div>

                          <!-- Serial Number -->
                          <div class="field" style="min-width: 400px;">
                            <apex:outputLabel value="Serial Number" styleClass="field-label" />
                            <div class="field-value output">
                              <apex:outputField value="{!qdm.parentRec.SerialNumber__c}" />
                            </div>
                          </div>

                          <!-- Service Type -->
                          <div class="field" style="min-width: 400px;height: 160px;">
                            <label class="field-label">Service Type</label>
                            <div style="padding-left:38%; width:100%">
                              <apex:selectCheckboxes layout="pageDirection" value="{!checkedServiceTypeValues}" label="{!$ObjectType.SVC_Report__c.Fields['Service_Type__c'].Label}">
                                <apex:selectOptions value="{!serviceTypeList}" />
                              </apex:selectCheckboxes>
                            </div>
                          </div>

                          <!-- Quotation -->
                          <div class="field" style="min-width: 400px;">
                            <apex:outputLabel value="Quotation" for="jeolAsiaAssistantEngineer" styleClass="field-label" />
                            <apex:inputField id="svcReportQuotation" rendered="{!!isReadOnly}" styleClass="field-value lookup" value="{!qdm.parentRec.Quotation__c}"
                              html-data-compare-value="{!qdm.baseParentRec.Quotation__c}" onblur="safetyLockCheck(this);" onkeypress="return disableEnterKey(event)"
                            />
                          </div>

                        </div>

                      </apex:outputPanel>
                    </div>
                    <!-- SVC Informations Merged Columns -->
                    <div class="quotation-item">
                      <!-- Service Title -->
                      <div class="field" style="min-width: 1000px;">
                        <label class="field-label">Service Title</label>
                        <apex:inputField id="serviceTitle" rendered="{!!isReadOnly}" styleClass="field-value" value="{!qdm.parentRec.SVCTitle__c}"
                          html-data-compare-value="{!qdm.baseParentRec.SVCTitle__c}" onblur="safetyLockCheck(this);" style="width: 80%;"
                          onkeypress="return disableEnterKey(event)" />
                      </div>

                      <!-- Customer's Request / Problem -->
                      <div class="field" style="min-width: 1000px;">
                        <label class="field-label">Customer's Request / Problem</label>
                        <apex:inputTextarea id="customersRequestProblem" rendered="{!!isReadOnly}" styleClass="field-value" value="{!qdm.parentRec.CustomerRequestProblem__c}"
                          html-data-compare-value="{!qdm.baseParentRec.CustomerRequestProblem__c}" onblur="safetyLockCheck(this);"
                          style="width: 80%; height: 10.5rem;" />
                      </div>
                    </div>


                    <!-- GRID 1 -->
                    <!-- Grid of Member Assign -->
                    <apex:outputPanel layout="block" id="detailAreaA" styleClass="quotation-item quotation-detail-informations">
                      <apex:variable value="{!qdm.MemberAssignSize > 0}" var="hasMemberAssign" />
                      <hr style="margin: 20px 0px 4px 0px; float: none;" />


                      <div class="quotation-item-header clearfix" style="height: 38px;">
                        <div class="header-title">SVC Member Assign</div>
                        <!-- MemberAssign Buttons -->
                        <a class="customButton" href="{!assignURL}" target="_blank">New Assign</a>
                        <a class="customButton" href="{!calendarURL}" target="_blank">User Calendar</a>
                        <a class="customButton" href="{!calendarClassicURL}" target="_blank">Classic Calendar</a>
                      </div>


                      <div class="quotation-item-header quotation-detail-header backgroundcolorgrey clearfix" style="height: 32px;">
                        <div class="quotation-detail-header-item quotation-detail-productName quotation-detailA-productName" style="padding-left: 23px;">Date</div>
                        <div class="quotation-detail-header-item quotation-detail-ModelType quotation-detailA-ModelType">Engineer</div>
                      </div>

                      <apex:outputPanel layout="block" styleClass="quotation-item-body clearfix quotation-detail-list quotation-detail-listA">
                        <apex:outputPanel layout="none" rendered="{!hasMemberAssign}">

                          <apex:repeat value="{!qdm.memberAsignList}" var="event">

                            <!-- NORMAL ROW -->
                            <apex:outputPanel id="detail_productA" layout="block" html-data-section-type="A" styleClass="quotation-detail-item quotation-detail-itemA clearfix">
                              <!-- Date -->
                              <div class="field" style="overflow-x: hidden;">
                                <div class="indent-wrap">
                                  <apex:outputText styleClass="field-value quotation-detail-productName quotation-detailA-productName mightOverflow" value="{!event.dateTimeFromTo}"
                                  />
                                </div>
                              </div>

                              <!-- Engineer -->
                              <div class="field clearfix">
                                <apex:outputText value="{!event.e.Owner.Name}" styleClass="field-value quotation-detail-ModelType quotation-detailA-ModelType"
                                />
                              </div>

                            </apex:outputPanel>

                          </apex:repeat>
                        </apex:outputPanel>
                        <!-- If No Assign -->
                        <apex:outputPanel layout="none" rendered="{!!hasMemberAssign}">
                          <div style="padding: 10px; margin: 2px 0px;">No Member Assign.</div>
                        </apex:outputPanel>
                      </apex:outputPanel>
                      <apex:actionStatus layout="block" onstop="initWithCalcurate();focusOpenModalDetail();" id="ajaxStatusA" startStyleClass="ajax-status-start">
                        <apex:facet name="start">
                          <div class="ajax-status-start-inner ajax-loading">
                            <span style="position:relative; z-index: 2;">{!$Label.JEOL_QuotEdit_Label_Searching}</span>
                          </div>
                        </apex:facet>
                      </apex:actionStatus>
                    </apex:outputPanel>


                    <!-- Service Performed / Solution SECTION -->
                    <apex:outputPanel >
                      <apex:outputPanel layout="block" styleClass="quotation-item quotation-detail-informations">
                        <div class="quotation-item-header clearfix" style="height: 38px;">
                          <div class="header-title">Service Performed / Solution</div>
                        </div>
                        <!-- Description -->
                        <div style="float: left; width: 100%; padding: 1rem 8px 0 8px;">
                          <div class="field" style="min-width: 1000px; ">
                            <apex:inputTextarea id="serviceDescription" rendered="{!!isReadOnly}" styleClass="field-value" value="{!qdm.parentRec.ServicePerformedSolution__c}"
                              html-data-compare-value="{!qdm.baseParentRec.ServicePerformedSolution__c}" onblur="safetyLockCheck(this);"
                              style="width: 100%; height: 10.5rem;" />
                          </div>
                        </div>
                      </apex:outputPanel>
                    </apex:outputPanel>



                    <!-- GRID 4 -->
                    <!-- Grid of Parts Informations -->
                    <apex:outputPanel >
                      <apex:outputPanel layout="block" id="detailAreaB" styleClass="quotation-item quotation-detail-informations">
                        <apex:variable value="{!qdm.currentSizeB > 0}" var="hasDetailsB" />

                        <div class="quotation-item-header clearfix" style="height: 38px;">
                          <div class="header-title">2SP Informations</div>

                          <div style="float: right;">
                            <!-- Copy button -->
                            <!-- <apex:commandLink styleclass="customButton" onclick="initDetailProductBItemManage($j(this).closest('.quotation-detail-item')); setOpenModalDetailId(this);"
                              rerender="detailAreaB,apexMessage" style="display: inline-block; height: 30px; width: 250px; margin-left: 20px; vertical-align: bottom;"
                              status="ajaxStatusB">
                              Import from Project Master
                            </apex:commandLink> -->
                            <button class="customButton" style="display: inline-block; height: 30px; width: 200px; margin-left: 20px; vertical-align: bottom;"
                              type="button" data-toggle="modal" onclick="initDetailProductBItemManage($j(this).closest('.quotation-detail-item')); setOpenModalDetailId(this);"
                              data-target="#detailProductItemView">Import from Project Master</button>
                          </div>
                        </div>

                        <!-- GRID 2 -->
                        <!-- Grid of items -->
                        <div class="quotation-item-header quotation-detail-header backgroundcolorgrey clearfix" style="height: 32px;">
                          <div class="quotation-detail-header-item quotation-detail-productName quotation-detailB-productName" style="padding-left: 23px; {!IF(!isReadOnly, 'margin-left: 95px;', '')}">
                            Product Name
                          </div>
                          <div class="quotation-detail-header-item quotation-detail-Description quotation-detailB-Description">Description</div>
                          <div class="quotation-detail-header-item quotation-detail-Supplier quotation-detailB-Supplier">Supplier Name</div>
                          <div class="quotation-detail-header-item quotation-detail-quantity quotation-detailB-quantity">Qty</div>
                        </div>

                        <apex:outputPanel layout="block" styleClass="quotation-item-body clearfix quotation-detail-list quotation-detail-listB">
                          <apex:outputPanel layout="none" rendered="{!hasDetailsB}">
                            <apex:repeat value="{!qdm.itemsB}" var="item">

                              <!-- NORMAL ROW -->
                              <apex:outputPanel id="detail_productB" layout="block" html-data-depth="{!item.rec.Depth__c}" html-data-sortNo="{!item.rec.SortNo__c}"
                                html-data-section-type="B" html-data-type="{!item.rec.Type__c}" styleClass="quotation-detail-item quotation-detail-itemB clearfix">

                                <div class="{!IF(isReadOnly, 'hidden', 'field')}">
                                  <div class="quotation-detail-action sortableAction sortableActionB" onmousedown="dragActionB(this);">
                                    <div class="sortable-pointer" />
                                  </div>
                                </div>

                                <div class="{!IF(isReadOnly, 'hidden', 'field')}">
                                  <div class="quotation-detail-action configAction clearfix">
                                    <apex:outputLink value="javascript: void(0);" onclick="removeDepth(this); lockSafety(); return false;" styleClass="paragraph-option paragraph-up">
                                      &lsaquo;
                                    </apex:outputLink>
                                    <apex:outputLink value="javascript: void(0);" onclick="addDepth(this); lockSafety(); return false;" styleClass="paragraph-option paragraph-down">
                                      &rsaquo;
                                    </apex:outputLink>
                                  </div>
                                </div>

                                <div class="hidden">
                                  <apex:inputHidden html-class="quotation-detail-sortNo" value="{!item.rec.SortNo__c}" />
                                  <apex:inputHidden html-class="quotation-detail-depth" value="{!item.rec.Depth__c}" />
                                </div>

                                <!-- BODY__c -->
                                <div class="field" style="overflow-x: hidden;{!IF(isReadOnly,' margin-left: 86px; width: 157px;', '')}">

                                  <div class="indent-wrap">

                                    <button class="{!IF(isReadOnly, 'hidden', 'productSelectButton')}" type="button" data-toggle="modal" onclick="initDetailProductBItemManage($j(this).closest('.quotation-detail-item')); setOpenModalDetailId(this);"
                                      data-target="#detailProductItemView" />

                                    <apex:inputField rendered="{!!isReadOnly}" id="quotation-detail-productNameB" styleClass="field-value quotation-detail-productName quotation-detailB-productName"
                                      value="{!item.rec.Body__c}" html-data-compare-value="{!item.rec.Body__c}" onfocus="detailBodyFocus(this);"
                                      onblur="detailBodyBlur(this);safetyLockCheck(this);" html-placeholder="Product Name"
                                    />

                                    <apex:outputText rendered="{!isReadOnly}" styleClass="field-value quotation-detail-productName quotation-detailB-productName"
                                      value="{!item.rec.Body__c}" style="padding-left: 8px; width: 157px;" />
                                  </div>
                                </div>

                                <!-- DESCRIPTION__c -->
                                <div class="field clearfix">

                                  <apex:inputField rendered="{!!isReadOnly}" value="{!item.rec.Description__c}" styleClass="field-value quotation-detail-Description quotation-detailB-Description"
                                    html-placeholder="Description" html-data-compare-value="{!item.rec.Description__c}" onblur="safetyLockCheck(this);"
                                    onkeypress="return disableEnterKey(event)" />

                                  <apex:outputText rendered="{!isReadOnly}" value="{!item.rec.Description__c}" styleClass="field-value quotation-detail-Description quotation-detailB-Description"
                                  />
                                </div>


                                <!-- SUPPLIER__c -->
                                <div class="field clearfix">

                                  <apex:inputField rendered="{!!isReadOnly}" value="{!item.rec.Supplier__c}" styleClass="field-value quotation-detail-Supplier quotation-detailB-Supplier"
                                    html-placeholder="Supplier" html-data-compare-value="{!item.rec.Supplier__c}" onblur="safetyLockCheck(this);"
                                    onkeypress="return disableEnterKey(event)" />

                                  <apex:outputText rendered="{!isReadOnly}" value="{!item.rec.Supplier__c}" styleClass="field-value quotation-detail-Supplier quotation-detailB-Supplier"
                                  />
                                </div>


                                <!-- QUANTITY -->
                                <div class="field">
                                  <apex:inputField rendered="{!!isReadOnly}" styleClass="field-value quotation-detail-quantity quotation-detailB-quantity number"
                                    value="{!item.rec.Quantity__c}" html-data-compare-value="{!item.rec.Quantity__c}" onblur="safetyLockCheck(this);"
                                    onkeypress="return disableEnterKey(event)" />

                                  <apex:outputText rendered="{!isReadOnly}" styleClass="field-value quotation-detail-quantity quotation-detailB-quantity number"
                                    value="{0,number, ###,###,###,###,###,##0.0}">
                                    <apex:param value="{!item.rec.Quantity__c}" />
                                  </apex:outputText>

                                </div>








                                <div class="field" data-type="dropdown">

                                  <button type="button" onclick="dorpdownAction(this);" data-type="button" class="optionalButton">
                                    ▼
                                  </button>

                                  <ul class="detail-options" data-type="list" style="{!IF(language <> 'ja', 'width: 225px;', '')}">

                                    <li style="height: 30px;width: 225px;" class="{!IF(isReadOnly, 'hidden', 'field detail-options-item')}" data-type="item">

                                      <apex:commandLink action="{!item.copyAction}" title="Clone this row" onclick="lockSafety();clearAction(this);" rerender="detailAreaB,modalListView,modalListViewDel,SubtotalA,SubtotalC,SubtotalD,SubtotalE,SubtotalF,SubtotalG,totalResult,apexMessage"
                                        styleClass="quotation-detail-action" status="ajaxStatusB" style="{!IF(language <> 'ja', 'width: 225px;', '')}">
                                        Clone this row
                                      </apex:commandLink>
                                    </li>

                                    <li class="{!IF(isReadOnly, 'hidden', '')}">
                                      <hr/>
                                    </li>

                                    <li style="height: 30px;{!IF(language <> 'ja', 'width: 225px;', '')}" class="field detail-options-item close-option" data-type="item">

                                      <apex:outputLink value="javascript: void(0);" styleClass="closeButton" onclick="clearAction(this);$j(this).closest('[data-type=\'dropdown\']').find('[data-type=\'button\']').trigger('focus');return false;"
                                        style="{!IF(language <> 'ja', 'width: 225px;', '')}">
                                        Close
                                      </apex:outputLink>
                                    </li>
                                  </ul>
                                </div>

                                <div class="{!IF(isReadOnly, 'hidden', 'field')}">

                                  <apex:commandLink action="{!item.deleteAction}" title="Remove the row" onclick="lockSafety();" rerender="detailAreaB,modalListView,modalListViewDel,SubtotalA,SubtotalC,SubtotalD,SubtotalE,SubtotalF,SubtotalG,totalResult,apexMessage"
                                    styleClass="quotation-detail-action deleteAction" status="ajaxStatusB">
                                    ×
                                  </apex:commandLink>
                                </div>

                              </apex:outputPanel>



                            </apex:repeat>
                          </apex:outputPanel>

                          <apex:outputPanel layout="none" rendered="{!!hasDetailsB}">
                            <div style="padding: 10px; margin: 2px 0px;">No detail.</div>
                          </apex:outputPanel>

                        </apex:outputPanel>

                        <apex:actionStatus layout="block" onstop="initWithCalcurate();focusOpenModalDetail();" id="ajaxStatusB" startStyleClass="ajax-status-start">
                          <apex:facet name="start">
                            <div class="ajax-status-start-inner ajax-loading">
                              <span style="position:relative; z-index: 2;">{!$Label.JEOL_QuotEdit_Label_Searching}</span>
                            </div>
                          </apex:facet>
                        </apex:actionStatus>
                        <hr />
                      </apex:outputPanel>
                    </apex:outputPanel>



                    <!-- GRID 5 -->
                    <!-- Grid of Parts SVC Report Informations -->



                    <!-- GRID 3 -->
                    <!-- Grid of 2SP Informations -->
                    <apex:outputPanel >
                      <apex:outputPanel layout="block" id="detailAreaC" styleClass="quotation-item quotation-detail-informations">
                        <apex:variable value="{!qdm.currentSizeC > 0}" var="hasDetailsC" />

                        <div class="quotation-item-header clearfix" style="height: 38px;">
                          <div class="header-title">Parts Informations</div>

                          <div style="float: right;">
                            <apex:outputLabel value="Quotation" for="quotation" styleClass="field-label" />

                            <apex:inputField rendered="{!!isReadOnly}" id="quotation" styleClass="field-value quotation" value="{!lookupRecord.Quotation__c}"
                              html-data-compare-value="{!lookupRecord.Quotation__c}" onblur="safetyLockCheck(this);" onkeypress="return disableEnterKey(event)"
                            />

                            <!-- Add New Item button -->
                            <apex:commandLink rerender="detailAreaB,modalListView,modalListViewDel,apexMessage" action="{!qdm.createQuotationDetailB}"
                              oncomplete="lockSafety();showResult('{!$Label.JEOL_QuotEdit_Message_ProcessingCompleted}');"
                              styleClass="add-default-detail customButton" status="ajaxStatusB" style="padding-right:10px;">
                              New Parts
                            </apex:commandLink>
                            <apex:outputText rendered="{!isReadOnly}" value="{!lookupRecord.Quotation__c}" />
                            <!-- Copy button -->
                            <apex:commandLink action="{!qdm.copyLSInfoFromQuotation}" styleclass="customButton" onclick="lockSafety();" rerender="detailAreaB,apexMessage"
                              style="display: inline-block; height: 30px; width: 100px; margin-left: 20px; vertical-align: bottom;"
                              status="ajaxStatusB">
                              Copy
                            </apex:commandLink>
                          </div>
                        </div>

                        <div class="quotation-item-header quotation-detail-header backgroundcolorgrey clearfix" style="height: 32px;">
                          <div class="quotation-detail-header-item quotation-detail-productName quotation-detailB-productName" style="padding-left: 23px; {!IF(!isReadOnly, 'margin-left: 95px;', '')}">
                            Product Name
                          </div>
                          <div class="quotation-detail-header-item quotation-detail-Description quotation-detailB-Description">Description</div>
                          <div class="quotation-detail-header-item quotation-detail-Supplier quotation-detailB-Supplier">Supplier Name</div>
                          <div class="quotation-detail-header-item quotation-detail-quantity quotation-detailB-quantity">Qty</div>
                        </div>

                        <apex:outputPanel layout="block" styleClass="quotation-item-body clearfix quotation-detail-list quotation-detail-listB">
                          <apex:outputPanel layout="none" rendered="{!hasDetailsC}">
                            <apex:repeat value="{!qdm.itemsB}" var="item">
                              <!-- NORMAL ROW -->
                              <apex:outputPanel id="detail_productB" layout="block" html-data-depth="{!item.rec.Depth__c}" html-data-sortNo="{!item.rec.SortNo__c}"
                                html-data-section-type="B" html-data-type="{!item.rec.Type__c}" styleClass="quotation-detail-item quotation-detail-itemB clearfix">
                                <div class="{!IF(isReadOnly, 'hidden', 'field')}">
                                  <div class="quotation-detail-action sortableAction sortableActionB" onmousedown="dragActionB(this);">
                                    <div class="sortable-pointer" />
                                  </div>
                                </div>
                                <div class="{!IF(isReadOnly, 'hidden', 'field')}">
                                  <div class="quotation-detail-action configAction clearfix">
                                    <apex:outputLink value="javascript: void(0);" onclick="removeDepth(this); lockSafety(); return false;" styleClass="paragraph-option paragraph-up">
                                      &lsaquo;
                                    </apex:outputLink>
                                    <apex:outputLink value="javascript: void(0);" onclick="addDepth(this); lockSafety(); return false;" styleClass="paragraph-option paragraph-down">
                                      &rsaquo;
                                    </apex:outputLink>
                                  </div>
                                </div>
                                <div class="hidden">
                                  <apex:inputHidden html-class="quotation-detail-sortNo" value="{!item.rec.SortNo__c}" />
                                  <apex:inputHidden html-class="quotation-detail-depth" value="{!item.rec.Depth__c}" />
                                </div>

                                <!-- BODY__c -->
                                <div class="field" style="overflow-x: hidden;{!IF(isReadOnly,' margin-left: 86px; width: 157px;', '')}">
                                  <div class="indent-wrap">
                                    <button class="{!IF(isReadOnly, 'hidden', 'productSelectButton')}" type="button" data-toggle="modal" onclick="initDetailProductBItemManage($j(this).closest('.quotation-detail-item')); setOpenModalDetailId(this);"
                                      data-target="#detailProductItemView" />
                                    <apex:inputField rendered="{!!isReadOnly}" id="quotation-detail-productNameB" styleClass="field-value quotation-detail-productName quotation-detailB-productName"
                                      value="{!item.rec.Body__c}" html-data-compare-value="{!item.rec.Body__c}" onfocus="detailBodyFocus(this);"
                                      onblur="detailBodyBlur(this);safetyLockCheck(this);" html-placeholder="Product Name"
                                    />
                                    <apex:outputText rendered="{!isReadOnly}" styleClass="field-value quotation-detail-productName quotation-detailB-productName"
                                      value="{!item.rec.Body__c}" style="padding-left: 8px; width: 157px;" />
                                  </div>
                                </div>

                                <!-- DESCRIPTION__c -->
                                <div class="field clearfix">
                                  <apex:inputField rendered="{!!isReadOnly}" value="{!item.rec.Description__c}" styleClass="field-value quotation-detail-Description quotation-detailB-Description"
                                    html-placeholder="Description" html-data-compare-value="{!item.rec.Description__c}" onblur="safetyLockCheck(this);"
                                    onkeypress="return disableEnterKey(event)" />
                                  <apex:outputText rendered="{!isReadOnly}" value="{!item.rec.Description__c}" styleClass="field-value quotation-detail-Description quotation-detailB-Description"
                                  />
                                </div>
                                <!-- SUPPLIER__c -->
                                <div class="field clearfix">
                                  <apex:inputField rendered="{!!isReadOnly}" value="{!item.rec.Supplier__c}" styleClass="field-value quotation-detail-Supplier quotation-detailB-Supplier"
                                    html-placeholder="Supplier" html-data-compare-value="{!item.rec.Supplier__c}" onblur="safetyLockCheck(this);"
                                    onkeypress="return disableEnterKey(event)" />
                                  <apex:outputText rendered="{!isReadOnly}" value="{!item.rec.Supplier__c}" styleClass="field-value quotation-detail-Supplier quotation-detailB-Supplier"
                                  />
                                </div>
                                <!-- QUANTITY -->
                                <div class="field">
                                  <apex:inputField rendered="{!!isReadOnly}" styleClass="field-value quotation-detail-quantity quotation-detailB-quantity number"
                                    value="{!item.rec.Quantity__c}" html-data-compare-value="{!item.rec.Quantity__c}" onblur="safetyLockCheck(this);"
                                    onkeypress="return disableEnterKey(event)" />

                                  <apex:outputText rendered="{!isReadOnly}" styleClass="field-value quotation-detail-quantity quotation-detailB-quantity number"
                                    value="{0,number, ###,###,###,###,###,##0.0}">
                                    <apex:param value="{!item.rec.Quantity__c}" />
                                  </apex:outputText>
                                </div>
                                <!-- List Edit Area -->
                                <div class="field" data-type="dropdown">
                                  <!-- Edit Menu Button -->
                                  <button type="button" onclick="dorpdownAction(this);" data-type="button" class="optionalButton">
                                    ▼
                                  </button>
                                  <ul class="detail-options" data-type="list" style="{!IF(language <> 'ja', 'width: 225px;', '')}">
                                    <!-- Clone this row -->
                                    <li style="height: 30px;width: 225px;" class="{!IF(isReadOnly, 'hidden', 'field detail-options-item')}" data-type="item">
                                      <apex:commandLink action="{!item.copyAction}" title="Clone this row" onclick="lockSafety();clearAction(this);" rerender="detailAreaB,modalListView,modalListViewDel,SubtotalA,SubtotalC,SubtotalD,SubtotalE,SubtotalF,SubtotalG,totalResult,apexMessage"
                                        styleClass="quotation-detail-action" status="ajaxStatusB" style="{!IF(language <> 'ja', 'width: 225px;', '')}">
                                        Clone this row
                                      </apex:commandLink>
                                    </li>
                                    <li class="{!IF(isReadOnly, 'hidden', '')}">
                                      <hr/>
                                    </li>
                                    <!-- Close row-->
                                    <li style="height: 30px;{!IF(language <> 'ja', 'width: 225px;', '')}" class="field detail-options-item close-option" data-type="item">
                                      <apex:outputLink value="javascript: void(0);" styleClass="closeButton" onclick="clearAction(this);$j(this).closest('[data-type=\'dropdown\']').find('[data-type=\'button\']').trigger('focus');return false;"
                                        style="{!IF(language <> 'ja', 'width: 225px;', '')}">
                                        Close
                                      </apex:outputLink>
                                    </li>
                                  </ul>
                                </div>
                                <!-- List Delete Button -->
                                <div class="{!IF(isReadOnly, 'hidden', 'field')}">
                                  <apex:commandLink action="{!item.deleteAction}" title="Remove the row" onclick="lockSafety();" rerender="detailAreaB,modalListView,modalListViewDel,SubtotalA,SubtotalC,SubtotalD,SubtotalE,SubtotalF,SubtotalG,totalResult,apexMessage"
                                    styleClass="quotation-detail-action deleteAction" status="ajaxStatusB">
                                    ×
                                  </apex:commandLink>
                                </div>
                              </apex:outputPanel>
                            </apex:repeat>
                          </apex:outputPanel>
                          <!-- if no 2SP Parts -->
                          <apex:outputPanel layout="none" rendered="{!!hasDetailsC}">
                            <div style="padding: 10px; margin: 2px 0px;">No detail.</div>
                          </apex:outputPanel>
                        </apex:outputPanel>

                        <apex:actionStatus layout="block" onstop="initWithCalcurate();focusOpenModalDetail();" id="ajaxStatusC" startStyleClass="ajax-status-start">
                          <apex:facet name="start">
                            <div class="ajax-status-start-inner ajax-loading">
                              <span style="position:relative; z-index: 2;">{!$Label.JEOL_QuotEdit_Label_Searching}</span>
                            </div>
                          </apex:facet>
                        </apex:actionStatus>
                        <hr />
                      </apex:outputPanel>
                    </apex:outputPanel>


                    <!-- Hide 2SP Information grid until Service Report has been released (remove the rendered="false" attribute of the following apex:outputPanel)-->
                    <apex:outputPanel rendered="true">
                      <apex:outputPanel layout="block" id="detailAreaD" styleClass="quotation-item quotation-detail-informations">
                        <apex:variable value="{!qdm.currentSizeC > 0}" var="hasDetailsC" />
                        <div class="quotation-item-header clearfix" style="height: 38px;">
                          <div class="header-title">SVC Report Informations</div>
                        </div>
                        <!-- GRID 3 -->
                        <!-- Grid of items -->
                        <div class="quotation-item-header quotation-detail-header backgroundcolorgrey clearfix" style="height: 32px;">
                          <div class="quotation-detail-header-item quotation-detail-PartNumber quotation-detailC-PartNumber">Part Number</div>
                          <div class="quotation-detail-header-item quotation-detail-Specification quotation-detailC-Specification">Specification</div>
                          <div class="quotation-detail-header-item quotation-detail-Description quotation-detailC-Description">Description</div>
                          <div class="quotation-detail-header-item quotation-detail-UpdatedDate quotation-detailC-UpdatedDate">Updated Date</div>
                          <div class="quotation-detail-header-item quotation-detail-quantity quotation-detailC-quantity">Qty</div>
                        </div>

                        <apex:outputPanel layout="block" styleClass="quotation-item-body clearfix quotation-detail-list quotation-detail-listC">
                          <apex:outputPanel layout="none" rendered="{!hasDetailsC}">
                            <apex:repeat value="{!qdm.itemsC}" var="item">
                              <!-- NORMAL ROW -->
                              <apex:outputPanel id="detail_productC" layout="block" html-data-depth="{!item.rec.Depth__c}" html-data-sortNo="{!item.rec.SortNo__c}"
                                html-data-section-type="C" html-data-type="{!item.rec.Type__c}" styleClass="quotation-detail-item quotation-detail-itemC clearfix">
                                <!-- PART NUMBER -->
                                <div class="field">
                                  <div class="indent-wrap">
                                    <apex:outputText styleClass="field-value quotation-detail-PartNumber quotation-detailC-PartNumber" value="{!item.rec.PartNumber__c}"
                                    />
                                  </div>
                                </div>
                                <!-- SPECIFICATION -->
                                <div class="field">
                                  <apex:outputText styleClass="field-value quotation-detail-Specification quotation-detailC-Specification" value="{!item.rec.Specification__c}"
                                  />
                                </div>
                                <!-- DESCRIPTION -->
                                <div class="field">
                                  <apex:outputText styleClass="field-value quotation-detail-Description quotation-detailC-Description" value="{!item.rec.Description__c}"
                                  />
                                </div>
                                <!-- UPDATED DATE -->
                                <div class="field">
                                  <div class="field-value quotation-detail-UpdatedDate quotation-detailC-UpdatedDate">
                                    <apex:outputField value="{!item.rec.QuantityUpdatedDate__c}" />
                                  </div>
                                </div>
                                <!-- QUANTITY -->
                                <div class="field">
                                  <apex:outputText styleClass="field-value quotation-detail-quantity quotation-detailC-quantity number" value="{0,number, ###,###,###,###,###,##0.0}">
                                    <apex:param value="{!item.rec.Quantity__c}" />
                                  </apex:outputText>
                                </div>
                              </apex:outputPanel>
                            </apex:repeat>
                          </apex:outputPanel>
                          <apex:outputPanel layout="none" rendered="{!!hasDetailsC}">
                            <div style="padding: 10px; margin: 2px 0px;">No detail.</div>
                          </apex:outputPanel>
                        </apex:outputPanel>
                      </apex:outputPanel>
                    </apex:outputPanel>
                  </div>
                </div>
              </div>
            </apex:outputPanel>

            <div class="footer">
              <apex:include pageName="{!$Page.JEOL_VisualforceFooter}" />
            </div>

            <style>
              .modal-dialog .modal-content {
                border: 2px solid #5e82b2; //overflow: hidden;
              }

              .modal-dialog.modal-alert .modal-content {
                border: 2px solid #e34b4b;
              }

              #detailProductItemView .modal-dialog {
                width: 882px;
              }

              #certificatePrintView .modal-dialog {
                width: 822px;
              }

              .modal-dialog .modal-content .modal-header {
                background: #5e82b2;
                background: -moz-linear-gradient(top, #5e82b2 0%, #5575a1 100%);
                background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #5e82b2), color-stop(100%, #5575a1));
                background: -webkit-linear-gradient(top, #5e82b2 0%, #5575a1 100%);
                background: -o-linear-gradient(top, #5e82b2 0%, #5575a1 100%);
                background: -ms-linear-gradient(top, #5e82b2 0%, #5575a1 100%);
                background: linear-gradient(to bottom, #5e82b2 0%, #5575a1 100%);
                filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#5e82b2', endColorstr='#5575a1', GradientType=0);
                text-shadow: -1px -1px #415b7c, 1px 1px #415b7c;
                font-size: 16px;
                font-weight: bold;
                color: #fff;
                border-bottom: none;
              }

              .modal-dialog.modal-alert .modal-content .modal-header {
                background: #e34b4b;
                /* Old browsers */
                background: -moz-linear-gradient(top, #e34b4b 0%, #993737 100%);
                /* FF3.6+ */
                background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #e34b4b), color-stop(100%, #993737));
                /* Chrome,Safari4+ */
                background: -webkit-linear-gradient(top, #e34b4b 0%, #993737 100%);
                /* Chrome10+,Safari5.1+ */
                background: -o-linear-gradient(top, #e34b4b 0%, #993737 100%);
                /* Opera 11.10+ */
                background: -ms-linear-gradient(top, #e34b4b 0%, #993737 100%);
                /* IE10+ */
                background: linear-gradient(to bottom, #e34b4b 0%, #993737 100%);
                /* W3C */
                filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#e34b4b', endColorstr='#993737', GradientType=0);
                /* IE6-9 */
              }

              .modal-dialog .modal-body {}

              .modal-body .search-area {
                padding-top: 0px;
                background-color: #becde0;
                border: none;
                padding: 8px;
                margin-bottom: 16px;
                position: relative;
              }

              .modal-dialog .modal-content .modal-body .search-area .toggle-button {
                width: 80px;
                height: 20px;
                border-radius: 0 0 6px 6px;
                border: 1px solid #7e9bc1;
                background-color: #ffffff;
                text-align: center;
                cursor: pointer;
                line-height: 20px;
                position: absolute;
                top: 100%;
                padding: 0px;
              }

              .modal-body .search-area .toggle-button:before {
                content: '▼';
              }

              .modal-body .search-area .collapse.in+.toggle-button:before {
                content: '▲';
              }

              .modal-body .search-area .section-body .field,
              .modal-body .search-area .section-body .field .field-value[type="text"] {
                width: 100%;
              }

              .modal-body .search-area .section-body .search-field {
                display: table;
                float: left;
              }

              .modal-body .search-area .section-body .search-field .field {
                display: table-row;
                float: none;
              }

              .modal-body .search-area .section-body .search-field .field .field-label,
              .modal-body .search-area .section-body .search-field .field .field-value[type="text"] {
                display: table-cell;
              }

              .modal-body .search-area .section-body .search-field .field .field-label {
                width: 1%;
                min-width: 80px;
                white-space: nowrap;
              }

              .modal-body .search-area .section-body .search-field .field .field-value[type="text"] {
                width: 100%;
              }

              .modal-body .search-area .section-body .field.field-fitness,
              .modal-body .search-area .section-body .field.field-fitness .field-value {
                width: auto;
              }

              .modal-dialog .modal-body .errors {
                display: none;
              }

              .modal-dialog .modal-body .select-area {
                width: 100%;
              }

              .modal-dialog .modal-body .select-area>* {
                float: left;
              }

              .modal-dialog .modal-body .select-area:after {
                content: ".";
                display: block;
                height: 0px;
                overflow: hidden;
                clear: both;
              }

              .modal-dialog .modal-content .modal-body .select-area .item-list {
                width: 100%;
                height: 342px;
                overflow: auto;
              }

              .setting-row {
                width: 100%;
              }

              fieldset.setting-row {
                margin-top: 20px;
              }

              fieldset.setting-row legend {
                color: inherit;
                font-weight: normal;
                padding: 4px 8px;
              }

              .contents .modal-body .options-area .output-controls fieldset.setting-row .field .field-label {
                line-height: 30px;
                padding: 0px 8px;
              }

              .contents .modal-body .options-area .output-controls fieldset.setting-row .field .field-label,
              .contents .modal-body .options-area .output-controls fieldset.setting-row .field .field-value {
                height: 30px;
                vertical-align: middle;
              }

              .setting-row .word-text .field-value,
              .setting-row .word-text .field-label {
                font-size: 13px;
                text-align: left;
                width: 452px;
                margin-left: 8px;
              }

              .setting-row .word-select-list .field-value,
              .setting-row .word-select-list .field-label {
                font-size: 13px;
                width: 116px;
                text-align: left;
              }

              .modal-dialog .modal-content .modal-body .select-area .table {
                display: table;
                width: 100%;
              }

              .modal-dialog .modal-content .modal-body #productACatalogTabPanel .select-area .table,
              .modal-dialog .modal-content .modal-body #productGCatalogTabPanel .select-area .table,
              .modal-dialog .modal-content .modal-body #productCatalogTabPanel .select-area .table {
                width: 396px;
              }

              .modal-dialog .modal-content .modal-body .select-area .table .item {
                display: table-row;
                padding: 4px;
                border-radius: 2px;
                border: 1px solid #cccccc; //height: 58px;
                margin-top: -1px;
                user-select: none;
                -moz-user-select: none;
                -webkit-user-select: none;
                -ms-user-select: none;
                cursor: pointer;
                overflow: hidden;
                background-color: #fff;
              }

              .modal-dialog .modal-content .modal-body .select-area .table .item:first-child {
                margin-top: 0px;
              }

              .modal-dialog .modal-content .modal-body .select-area .table .item:hover .field {
                border-top: 1px solid #00ABFF;
                border-color: #00ABFF;
                box-shadow: 0 1px 5px rgba(0, 171, 255, 0.25);
                background-color: #fff;
                position: relative;
              }

              .modal-dialog .modal-content .modal-body .select-area .table .item:first-child:hover .field:first-child {
                border-left-color: #666;
              }

              .modal-dialog .modal-content .modal-body .select-area .table .item:hover .field:first-child {
                border-left-color: #00ABFF;
              }

              .modal-dialog .modal-content .modal-body .select-area .table .item:hover .field:last-child {
                border-right-color: #00ABFF;
              }

              .modal-dialog .modal-content .modal-body .select-area .table .item:last-child:hover .field {
                border-bottom-color: #00ABFF;
              }

              .modal-dialog .modal-content .modal-body .select-area .table .item .field.head {
                border-color: #666;
                box-shadow: none;
                background-color: #becde0;
                position: static;
                cursor: default;
              }

              .modal-dialog .modal-content .modal-body .select-area .item-list .table .item.selected .field {
                background-color: #00ABFF;
                color: #fff;
              }

              .modal-dialog .modal-content .modal-body .select-area .item-list .table .item.selected .field:first-child {
                border-left-color: #00ABFF;
              }

              .modal-dialog .modal-content .modal-body .select-area .table .item.selected:hover .field {
                background-color: #00ABFF;
                color: #fff;
              }

              .modal-dialog .modal-content .modal-body .select-area .table .item .field {
                display: table-cell;
                margin: 0;
                float: none;
                border: 1px solid #eee;
                border-left: none;
                border-top: none;
              }

              .modal-dialog .modal-content .modal-body .select-area .table .item:first-child .field {
                border-top: 1px solid #666;
              }

              .modal-dialog .modal-content .modal-body .select-area .table .item:last-child .field {
                border-bottom: 1px solid #666;
              }

              .modal-dialog .modal-content .modal-body .select-area .table .item .field:first-child {
                border-left: 1px solid #666;
              }

              .modal-dialog .modal-content .modal-body .select-area .table .item .field:last-child {
                border-right-color: #666;
              }

              .modal-dialog .modal-content .modal-body .select-area .table .item .field .field-label {
                font-size: 12px;
                padding: 0 8px;
                width: 80px;
                margin: 3px 0px;
                color: #999999;
              }

              .modal-dialog .modal-content .modal-body .select-area .table .item .field .field-value {
                font-size: 12px;
                margin-left: 4px;
                overflow: hidden;
                padding: 2px 8px;
                vertical-align: middle;
                white-space: nowrap;
                text-overflow: ellipsis;
                height: auto;
                line-height: normal;
                width: 100%;
              }

              .modal-dialog .modal-content .modal-body .select-area .table .item .field .field-value.number {
                text-align: right;
              }

              .modal-dialog .modal-content .modal-body #productACatalogTabPanel .select-area .tree,
              .modal-dialog .modal-content .modal-body #productGCatalogTabPanel .select-area .tree,
              .modal-dialog .modal-content .modal-body #productCatalogTabPanel .select-area .tree {
                padding: 8px;
              }

              .modal-dialog .modal-content .modal-body #productACatalogTabPanel .select-area .selected-area .tree>.item,
              .modal-dialog .modal-content .modal-body #productGCatalogTabPanel .select-area .selected-area .tree>.item,
              .modal-dialog .modal-content .modal-body #productCatalogTabPanel .select-area .selected-area .tree>.item {
                border: 1px solid #999;
                margin-top: -1px;
              }

              .modal-dialog .modal-content .modal-body #productACatalogTabPanel .select-area .selected-area .tree>.item:first-child,
              .modal-dialog .modal-content .modal-body #productGCatalogTabPanel .select-area .selected-area .tree>.item:first-child,
              .modal-dialog .modal-content .modal-body #productCatalogTabPanel .select-area .selected-area .tree>.item:first-child {
                margin-top: 0px;
              }

              .modal-dialog .modal-content .modal-body #productACatalogTabPanel .select-area .tree .item,
              .modal-dialog .modal-content .modal-body #productGCatalogTabPanel .select-area .tree .item,
              .modal-dialog .modal-content .modal-body #productCatalogTabPanel .select-area .tree .item {
                display: block;
                border-radius: 2px;
                user-select: none;
                -moz-user-select: none;
                -webkit-user-select: none;
                -ms-user-select: none;
                cursor: pointer;
                background-color: #fff;
                padding-bottom: 4px;
              }

              .modal-dialog .modal-content .modal-body #productACatalogTabPanel .select-area .tree .item:after,
              .modal-dialog .modal-content .modal-body #productGCatalogTabPanel .select-area .tree .item:after,
              .modal-dialog .modal-content .modal-body #productCatalogTabPanel .select-area .tree .item:after {
                content: "";
                display: block;
                width: 100%;
                height: 0px;
                clear: both;
              }

              .modal-dialog .modal-content .modal-body #productACatalogTabPanel .select-area .tree .item .tree-view,
              .modal-dialog .modal-content .modal-body #productGCatalogTabPanel .select-area .tree .item .tree-view,
              .modal-dialog .modal-content .modal-body #productCatalogTabPanel .select-area .tree .item .tree-view {
                //float: left;
                width: 100%;
              }

              .modal-dialog .modal-content .modal-body #productACatalogTabPanel .select-area .tree .item .tree-view:hover,
              .modal-dialog .modal-content .modal-body #productGCatalogTabPanel .select-area .tree .item .tree-view:hover,
              .modal-dialog .modal-content .modal-body #productCatalogTabPanel .select-area .tree .item .tree-view:hover {
                background-color: #ddd;
              }

              .modal-dialog .modal-content .modal-body #productACatalogTabPanel .select-area .tree .item[data-target]>.tree-view:before,
              .modal-dialog .modal-content .modal-body #productGCatalogTabPanel .select-area .tree .item[data-target]>.tree-view:before,
              .modal-dialog .modal-content .modal-body #productCatalogTabPanel .select-area .tree .item[data-target]>.tree-view:before {
                display: inline-block;
                margin-right: 8px;
                background-image: url("{!URLFOR($Resource.JEOL_CustomizedMaterials, 'JEOL_CustomizedMaterials/images/folder.png')}");
                background-position: center center;
                background-size: contain;
                background-repeat: no-repeat;
                vertical-align: text-bottom;
                width: 20px;
                height: 20px;
                content: "";
              }

              .modal-dialog .modal-content .modal-body #productACatalogTabPanel .select-area .tree .item.open[data-target]>.tree-view:before,
              .modal-dialog .modal-content .modal-body #productGCatalogTabPanel .select-area .tree .item.open[data-target]>.tree-view:before,
              .modal-dialog .modal-content .modal-body #productCatalogTabPanel .select-area .tree .item.open[data-target]>.tree-view:before {
                background-image: url("{!URLFOR($Resource.JEOL_CustomizedMaterials, 'JEOL_CustomizedMaterials/images/folder_open.png')}");
              }

              .modal-dialog .modal-content .modal-body #productACatalogTabPanel .select-area .tree .item .tree-fieldset,
              .modal-dialog .modal-content .modal-body #productGCatalogTabPanel .select-area .tree .item .tree-fieldset,
              .modal-dialog .modal-content .modal-body #productCatalogTabPanel .select-area .tree .item .tree-fieldset {
                width: 100%;
                float: left;
                display: none;
              }

              .modal-dialog .modal-content .modal-body #productACatalogTabPanel .select-area .tree .item>.children,
              .modal-dialog .modal-content .modal-body #productGCatalogTabPanel .select-area .tree .item>.children,
              .modal-dialog .modal-content .modal-body #productCatalogTabPanel .select-area .tree .item>.children {
                display: none;
                width: 100%;
                float: left;
                padding-left: 8px;
              }

              .modal-dialog .modal-content .modal-body #productACatalogTabPanel .select-area .tree .item>.children>.tree>.item:before,
              .modal-dialog .modal-content .modal-body #productGCatalogTabPanel .select-area .tree .item>.children>.tree>.item:before,
              .modal-dialog .modal-content .modal-body #productCatalogTabPanel .select-area .tree .item>.children>.tree>.item:before {
                display: block;
                float: left;
                content: "┗";
                height: 20px;
                line-height: 20px;
                margin-right: 8px;
              }

              .modal-dialog .modal-content .modal-body #productACatalogTabPanel .select-area .tree .item.open>.children,
              .modal-dialog .modal-content .modal-body #productGCatalogTabPanel .select-area .tree .item.open>.children,
              .modal-dialog .modal-content .modal-body #productCatalogTabPanel .select-area .tree .item.open>.children {
                display: block;
              }

              .modal-dialog .modal-content .modal-body #productACatalogTabPanel .select-area .tree .item.item-drag>.children,
              .modal-dialog .modal-content .modal-body #productGCatalogTabPanel .select-area .tree .item.item-drag>.children,
              .modal-dialog .modal-content .modal-body #productCatalogTabPanel .select-area .tree .item.item-drag>.children {
                display: none;
              }

              #detailProductItemView[data-tab-target] [data-tab-panel] {
                display: none;
              }

              #detailProductItemView[data-tab-target="productAItemSearch"] [data-tab-panel="productAItemSearch"],
              #detailProductItemView[data-tab-target="productBItemSearch"] [data-tab-panel="productBItemSearch"],
              #detailProductItemView[data-tab-target="productG1ItemSearch"] [data-tab-panel="productG1ItemSearch"],
              #detailProductItemView[data-tab-target="productG2ItemSearch"] [data-tab-panel="productG2ItemSearch"],
              #detailProductItemView[data-tab-target="catalogAItemSearch"] [data-tab-panel="catalogAItemSearch"],
              #detailProductItemView[data-tab-target="catalogGItemSearch"] [data-tab-panel="catalogGItemSearch"] {
                display: block;
              }

              [data-tab-target] .tab-buttons {
                margin-top: 8px;
              }

              [data-tab-target] .tab-buttons .tab {
                position: relative;
                bottom: -2px;
                padding: 2px 16px;
                border: 1px solid #7e9bc1;
                border-bottom: none;
                background: none;
                color: #999;
                margin: 0px 4px;
                font-weight: normal;
                border-radius: 4px 4px 0px 0px;
                transition: color 0.3s ease 0s;
              }

              [data-tab-target] .tab-buttons .tab:hover,
              [data-tab-target] .tab-buttons .tab.active {
                padding: 4px 16px;
                bottom: 0px;
                background-color: #fff;
                color: #333;
              }

              [data-tab-target] .tab-panel {
                border: 1px solid #7e9bc1;
              }

              #detailProductItemView .section .detail-product-action-area {
                padding: 4px;
                float: right;
              }

              #detailProductItemView .section .detail-product-action-area:first-child {
                float: left;
              }

              #detailProductItemView .section .detail-product-action-area .title {
                width: auto;
                line-height: 40px;
              }

              #detailProductItemView .section .detail-product-action-area hr {
                float: left
              }

              #detailProductItemView .select-area .item-list,
              #detailProductItemView .select-area .selected-list {
                height: 348px;
              }

              #detailProductItemView .select-area .selected-list {
                float: right;
              }

              #detailProductItemView .section .detail-product-action-area,
              #detailProductItemView .select-area .item-list,
              #detailProductItemView .select-area .selected-list {
                width: 406px;
                overflow: auto;
              }


              #detailProductItemView .select-area .selected-list {
                border: 3px dashed #eee;
                border-radius: 4px;
                margin-left: 0px;
                float: right;
                overflow-y: auto;
                overflow-x: overlay;
              }

              #detailProductItemView .select-area .selected-list .drop-target:empty {
                display: block;
                line-height: 326px;
                margin: 0px;
                width: 400px;
                text-align: center;
                color: #aaa; //background-color: #fff;
                font-size: 120%;
              }

              #detailProductItemView .select-area .selected-list.drop-hover .drop-target:empty {
                color: #fff;
              }

              #detailProductItemView .select-area .selected-list .drop-target:empty:after {
                content: "You can select items by using Drag &amp; Drop.";
                display: inline-block;
                *display: inline;
                *zoom: 1;
                width: 100%;
              }

              #detailProductItemView .select-area .selected-list.drop-active {
                background-color: #eee;
                border-color: #fff;
              }

              #detailProductItemView .select-area .selected-list.drop-hover {
                background-color: #becde0;
                border-color: #fff;
              }

              #detailProductItemView #productItemTabPanel .select-area .selected-list .item,
              #detailProductItemView #productAItemTabPanel .select-area .selected-list .item,
              #detailProductItemView #productBItemTabPanel .select-area .selected-list .item,
              #detailProductItemView #productG1ItemTabPanel .select-area .selected-list .item,
              #detailProductItemView #productG2ItemTabPanel .select-area .selected-list .item {
                position: relative;
                top: 0px;
                box-shadow: 0px -1px 3px -1px rgba(0, 0, 0, 0.4);
                transition: height 0.2s linear 0s;
              }

              #detailProductItemView .item-drag {
                width: 402px;
              }

              .modal-dialog .modal-content .modal-footer {
                overflow: hidden;
              }

              .modal-body .customButton {
                width: 100%;
              }

              .modal-dialog .modal-content .modal-footer .button-area {
                overflow: hidden;
                float: left;
              }

              .modal-dialog .modal-content .modal-footer .button-area.right {
                float: right;
              }

              .modal-dialog .modal-content .modal-footer .button-area .customButton {
                float: left;
                width: 120px;
                margin-left: 8px;
              }

              .modal-dialog .modal-content .modal-footer .button-area .customButton:first-child {
                margin-left: 0px;
              }

              .modal-dialog .modal-content .modal-body .section .title,
              .modal-dialog .modal-content .modal-body .section .header {
                width: 100%;
                float: left;
              }

              .modal-dialog .modal-content .modal-body .title {
                font-size: 15px;
                margin: 12px 0px;
              }

              .modal-dialog .modal-content .modal-body .options-area .output-settings .field .field-label,
              .modal-dialog .modal-content .modal-body .options-area .output-settings .field .field-value,
              .modal-dialog .modal-content .modal-body .options-area .output-controls .field .field-label,
              .modal-dialog .modal-content .modal-body .options-area .output-controls .field .field-value {
                font-size: 13px;
                padding: 4px 8px 4px 8px;
              }

              .modal-dialog .modal-content .modal-body .options-area .output-settings .field .field-value {
                width: 80px;
              }

              .modal-dialog .modal-content .modal-body .options-area .output-controls .field .field-label {
                width: 112px;
              }

              .modal-dialog .modal-content .item-loading {
                background-color: #ffffff;
                position: absolute;
                opacity: 0.7;
                filter: alpha(opacity=70);
                left: 0;
                top: 0;
                height: 100%;
                width: 100%;
                z-index: 100;
              }

              .customButton.doCancel {
                width: 100px;
                float: left;
              }

              .customButton.doDelete {
                float: left;
                width: 120px;
                color: #7F2D2D;
                border-color: #FF6B6B;
                margin-left: 12px;
                margin-right: 12px;
                text-shadow: none;
              }

              .customButton.doDelete:focus,
              .customButton.doDelete:hover {
                background-color: #E34B4B;
                color: #fff;
                border-color: #E21F1F;
              }

              .customButton.doDelete:active {
                box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.70) inset;
              }

              .customButton.doSave {
                width: 120px;
                float: right;
              }

              .customButton.doOutput {
                width: 120px;
                color: #3D6951;
                border-color: #16874A;
                text-shadow: none;
                margin-left: 8px;
                float: right;
              }

              .customButton.doOutput:hover {
                background-color: #4CB47C;
                color: #fff;
                border-color: #16874A;
              }

              .customButton.doOutput:active {
                background-color: #309F64;
              }

              .customButton.doPreview {
                float: right;
                width: 120px;
                margin-left: 8px;
              }

              .alert {
                top: 10px;
                display: none;
                position: fixed;
                text-align: center;
                width: 100%;
                opacity: 0;
                transition: top 0.4s ease-out 0s, opacity 0.4s ease-out 0s;
                z-index: 2000;
              }

              .alert p {
                display: inline-block;
                *display: inline;
                *zoom: 1;
                white-space: nowrap;
                border: 1px solid #FFF100;
                background-color: #FFFBC6;
                border-radius: 2px;
                box-shadow: 0px 2px 3px 1px rgba(0, 0, 0, 0.4);
                padding: 2px 30px;
              }

              .field .radio-item {
                float: left;
              }

              .field-value.master-accountCode {
                width: 72px;
              }

              .field-value.master-contactName,
              .field-value.master-contactPhone,
              .field-value.master-contactBelong,
              .field-value.master-contactPost {
                width: 108px;
              }

              .field-value.master-accountName {
                width: 158px;
              }

              .field-value.master-accountAddress {
                width: 320px;
              }

              .field-value.master-quoteId {
                display: none;
              }

              .modalDetailList col.checkbox {
                width: 46px;
              }

              .modalDetailList col.Qty {
                width: 46px;
              }

              .modalDetailList col.isSel {
                width: 20px;
              }

              .modalDetailList col.qty2sp {
                width: 56px;
              }

              .modalDetailList col.ModelType {
                width: 122px;
              }

              .modalDetailList col.PartNumber {
                width: 112px;
              }

              .modalDetailList col.Description {
                width: 300px;
              }

              .modalDetailList col.body {
                width: 400px;
              }

              .modalDetailList col.body2sp {
                width: 230px;
              }

              .modalDetailList col.amount {
                width: 200px;
              }

              .modalDetailList col.MultDelAmount {
                width: 150px;
              }

              .modalDetailList col.MultDelQuantity {
                width: 80px;
              }

              .modalDetailList col.Price {
                width: 120px;
              }

              .modalDetailList {
                width: 100%;
                table-layout: fixed;
                border-collapse: collapse;
              }

              .price2spcol {
                vertical-align: middle;
                text-align: center;
              }

              .modalDetailList tr th,
              .modalDetailList tr td {
                vertical-align: middle;
                border: 1px solid #ccc;
                overflow: hidden;
              }

              .modalDetailList tr th div.field,
              .modalDetailList tr td div.field {
                float: none;
                width: 100%;
              }

              .modalDetailList tr td div.field .field-value.center,
              .modalDetailList tr th div.field .field-label.center {
                text-align: center;
              }

              .modalDetailList tr td div.field .field-value.right,
              .modalDetailList tr th div.field .field-label.right {
                text-align: right;
              }

              .modalDetailList tr th div.field .field-label,
              .modalDetailList tr td div.field .field-value {
                text-align: left;
                padding: 2px 8px;
                white-space: nowrap;
                text-overflow: ellipsis;
                overflow: hidden;
                border: none;
                height: auto;
                width: 100%;
              }

              .modalDetailList tr[data-type="3"] {
                background-color: #d9edeb;
              }

              .modalDetailList tr[data-type="4"] {
                background-color: #F9E4EC;
              }

              .modalDetailList tr[data-type="5"] {
                background-color: #abcdef;
              }

              .modalDetailList tr[data-depth] td div.field .field-value.body:before {
                content: "&#9493;";
                padding-right: 4px;
                color: #ccc;
              }

              .modalDetailList tr[data-depth="0"] td div.field .field-value.body:before {
                content: ""
              }

              .modalDetailList tr[data-depth="1"] td div.field .field-value {
                padding-left: 16px;
              }

              .modalDetailList tr[data-depth="2"] td div.field .field-value {
                padding-left: 24px;
              }

              .modalDetailList tr[data-depth="3"] td div.field .field-value {
                padding-left: 32px;
              }

              .modalDetailList tr[data-depth="4"] td div.field .field-value {
                padding-left: 40px;
              }

              .modalDetailList tr[data-depth="5"] td div.field .field-value {
                padding-left: 48px;
              }

              .search-field-quotation-createdDate {
                margin-left: 4px;
              }

              table.delete_table td {
                width: 100px;
                text-align: center;
                vertical-align: middle;
              }

              table.delete_table tr {}

              table.delete_table tr.todelete {
                background-color: #999;
              }
            </style>
            <script>
              $j(function () {
                $j(document)
                  .mouseup(function () {
                    isMouseDown = false;
                  });
              });

            </script>
            <div id="alert" class="alert">
              <p class="description"></p>
            </div>







            <!-- MODAL FORM - SEARCH ITEM / CATALOG -->
            <div class="modal fade" id="detailProductItemView" data-tab-target="productBItemSearch" data-backdrop="static" tabindex="-1"
              role="dialog" aria-labelledby="detailProductItem" aria-hidden="true">
              <div class="modal-dialog">
                <div class="modal-content">
                  <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                    <div id="detailProductItem" class="screen-name">Items Selection</div>
                  </div>
                  <div class="modal-body section">
                    <div class="tab-buttons">
                      <button type="button" class="tab" onclick="tabSelection(this);" data-target="productBItemSearch" id="productBItemSearch">2SPParts Items Search</button>
                    </div>


                    <!-- TAB - ITEM SECTION B -->
                    <div id="productBItemTabPanel" class="tab-panel" data-tab-panel="productBItemSearch">


                      <div class="section search-area">
                        <div class="section-header">
                          <span>Search Filters:</span>
                        </div>
                        <div id="detailProductBItemSearchArea" class="section-body collapse in clearfix">

                          <div class="field" style="width: 100%;">
                            <input type="checkbox" class="field-value auto-close-check" style="width: auto;" checked="checked" id="chkCollapsingB" onkeypress="return disableEnterKey(event)"
                            />
                            <label class="field-label" style="width: auto;" for="chkCollapsingB">Automatically collapse this section after searching</label>
                          </div>
                          <div class="search-field">
                            <div class="field ">
                              <label class="field-label">Item Name</label>
                              <input type="text" class="field-value search-field-product-name" data-field="EnglishName__c" placeholder="Item Name" onkeypress="return disableEnterKey(event)"
                              />
                            </div>
                            <div class="field">
                              <label class="field-label">Supplier</label>
                              <input type="text" class="field-value search-field-model-type" data-field="Supplier__c" placeholder="Supplier" onkeypress="return disableEnterKey(event)"
                              />
                            </div>
                          </div>
                          <div class="field">
                            <button type="button" onclick="productBItemSearchJS();" class="customButton">Search</button>
                            <!-- <button type="button" onclick="alertTest();" class="customButton">Search</button> -->
                          </div>
                        </div>
                        <button type="button" class="toggle-button customButton" data-toggle="collapse" data-target="#detailProductBItemSearchArea"
                          aria-expanded="false" aria-controls="detailProductBItemSearchArea"></button>
                      </div>


                      <div class="section">
                        <div class="select-header clearfix">
                          <div class="detail-product-action-area clearfix">
                            <div class="title">
                              <span>List of Items</span>
                            </div>
                            <div class="pager-area clearfix">
                              <a href="javascript: void(0);" class="prev customButton" onclick="prevRecordsAddDraggableB();return false;" style="display: none;">&laquo;</a>
                              <div class="prev disabled-button">&laquo;</div>
                              <div class="current-page-number"></div>
                              <div class="separator">/</div>
                              <div class="max-page-number"></div>
                              <a href="javascript: void(0);" class="next customButton" onclick="nextRecordsAddDraggableB();return false;" style="display: none;">&raquo;</a>
                              <div class="next disabled-button">&raquo;</div>
                            </div>
                            <hr />
                          </div>
                          <div class="detail-product-action-area clearfix">
                            <div class="title">
                              <span>Items selected</span>
                            </div>
                            <hr />
                          </div>
                        </div>
                        <div class="select-area clearfix">
                          <div class="item-list"></div>
                          <div id="selected-list-B" class="selected-list">
                            <div class="drop-target table"></div>
                          </div>
                        </div>
                      </div>
                    </div>

                  </div>
                  <div class="modal-footer">
                    <div data-tab-panel="productBItemSearch">
                      <button type="button" class="customButton" onclick="lockSafety();chooseItemDetailProductB();">OK</button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </apex:form>

          <!-- NOTES & ATTACHMENTS -->
          <!--
           <hr style="margin-bottom: 40px; width: 96%; border-color: #ddd;"/>
           <apex:outputPanel id="attachmentList" layout="block" styleClass="section base-width" rendered="{!(qdm.parentRec.id != null)}">
             <apex:relatedList list="CombinedAttachments" subject="{!qdm.parentRec.id}" />
           </apex:outputPanel>
           -->

        </div>
      </apex:outputPanel>
    </body>

    </html>
  </apex:outputPanel>

  <script>
    $j('html').scrollTop({!scrollTopValue});
    $j('body').scrollTop({!scrollTopValue});
    if ({!scrollTopValue > 48}) {
      $j('.navi-area').addClass('fixed-top');
    }
  </script>
  <script type="text/javascript">
    window.onscroll = function () {
      var iTop1 = $j('html').scrollTop();
      var iTop2 = $j('body').scrollTop();

      $j('input[id$=fieldScrollValue]').val((iTop1 > iTop2) ? iTop1 : iTop2);
    };
  </script>

</apex:page>